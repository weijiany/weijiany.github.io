{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Hello World My first github pages, I will record my technical articles as much as possible. \ud83e\udee1","title":"Hello World"},{"location":"#hello-world","text":"My first github pages, I will record my technical articles as much as possible. \ud83e\udee1","title":"Hello World"},{"location":"aws/eks/0-vpc-cni-%E7%BD%91%E7%BB%9C%E7%AD%96%E7%95%A5/","text":"AWS VPC CNI \u7f51\u7edc\u7b56\u7565 \u5728\u4f7f\u7528 EKS \u7684\u65f6\u5019\uff0c\u4f1a\u6709\u4e00\u4e2a\u5b89\u5168\u7684\u70b9\u53ef\u4ee5\u8003\u8651 -> \u6211\u4eec\u5728 EKs \u4e2d\u90e8\u7f72\u7684\u5f88\u591a\u7684\u7b2c\u4e09\u7684\u4e1c\u897f\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u4f5c\u4e3a DevOps\uff0c\u5e76\u4e0d\u77e5\u9053\u5b83\u7684\u5e95\u5c42\u662f\u600e\u4e48\u5b9e\u73b0\u7684\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u5f88\u9ebb\u70e6\uff0c\u5f88\u6015\u522b\u4eba\u7684\u4e1c\u897f\u5f15\u5165\u4e86\u4e00\u4e2a\u4ec0\u4e48\u6837\u7684 bug \u5bfc\u81f4\u53ef\u4ee5\u88ab\u9ed1\u5ba2\u8fdb\u5165\u5230 Pod \u91cc \ud83d\udca5 \u6240\u6709\u7684 Pod \u90fd\u53ef\u4ee5\u522b\u4eba\u901a\u8fc7 API \u8bbf\u95ee\u5230\u4e86\uff01\u8fd9\u53ef\u4e0d\u662f\u4e00\u4e2a\u597d\u7684\u4e8b\u60c5\uff0c\u5bb9\u6613\u4e22\u5de5\u4f5c\u7684\u8bf4~ \u6c6a~ \u6240\u4ee5\u5462\uff0c\u4eca\u5929\u5c31\u6765\u5206\u4eab\u4e00\u4e2a\u8fd8\u633a\u6709\u610f\u601d\u7684\u4e1c\u897f(aws vpc cni network policy) AWS VPC CNI \u4ec0\u4e48\u662f AWS VPC CNI \u5462\uff1f \u7b80\u5355\u6765\u8bf4\uff1a\u5b83\u5c31\u662f Kubernetes \u91cc\u4f17\u591a CNI \u7684\u4e00\u79cd\u5b9e\u73b0\u3002 \u53ea\u4e0d\u8fc7\u5b83\u662f\u57fa\u4e8e AWS VPC \u6765\u5b9e\u73b0\u7684\uff0c\u4e0d\u50cf\u522b\u7684 CNI \u63d2\u4ef6\u4e00\u6837\u3002\u50cf flannel\u3001calico \u8fd9\u79cd\u90fd\u662f\u4f1a\u4f7f\u7528 Kubernetes \u4e2d\u7684 IP address \u6765\u7ed9 Pod \u6dfb\u52a0 IP\uff0c\u8fd9\u91cc\u66f4\u591a\u4f7f\u7528\u7684\u662f Linux \u63d0\u4f9b\u7684 network namespace\u3001veth-pair \u6765\u5b9e\u73b0\u8fd9\u79cd\u529f\u80fd\uff0c\u9760 Linux \u7684 virtual network \u6765\u505a\u3002 \u4f46\u662f AWS \u5b83\u53e6\u8f9f\u8e4a\u5f84\uff1a\u5b83\u4f1a\u7ed9\u6bcf\u4e00\u4e2a\u8fd0\u884c\u5728 EC2 \u4e0a\u7684 Pod \u653e\u4e0a\u4e00\u4e2a ENI(\u4e5f\u5c31\u662f\u7f51\u5361) \u6765\u5b9e\u73b0\u5728 EKS \u4e2d\u7ed9 Pod assign IP\uff0c\u4e8e\u662f\u8fd9\u91cc\u5c31\u6709\u4e2a\u5f88\u5751\u7239\u7684\u95ee\u9898\uff0c\u4e00\u4e2a EC2 \u6240\u80fd attach \u7684 ENI \u662f\u6709\u9650\u7684\uff0c\u8fd9\u5c31\u5bfc\u81f4 CPU\u3001Memory \u6709\u65f6\u5019\u8fd8\u6ca1\u6709\u8fbe\u5230 80%\uff0c\u4f46\u662f\u5374\u51fa\u73b0 EC2 \u7684 ENI \u5df2\u7ecf\u7528\u5c3d\u4e86\u2026\u2026 \u4e0d\u8fc7\u6709\u4e00\u79cd\u89e3\u51b3\u529e\u6cd5\uff0c\u5728 VPC-CNI \u4e0a\u79f0\u4e4b\u4e3a: ENABLE_PREFIX_DELEGATION \uff0c\u5f00\u542f\u8fd9\u4e2a\u529f\u80fd\u4e4b\u540e\uff0cEC2 \u4f1a\u7ed9 ENI \u5206\u914d\u4e00\u4e2a /28 \u7684\u7f51\u7edc\u5757\uff0c\u8fd9\u6837\u8fd9\u4e2a ENI \u5c31\u53ef\u4ee5\u63a7\u5236\u7684\u662f\u8fd9\u4e2a /28 \u4e0b\u7684\u6240\u6709 ip \u800c\u4e0d\u4ec5\u4ec5\u662f\u51e0\u4e2a\u72ec\u7acb\u7684 ip\u3002 Note: \u8fd9\u91cc\u4f1a\u51fa\u73b0 ENI \u672c\u6765\u53ef\u4ee5\u652f\u6301 20 \u4e2a ip\uff0c\u4f46\u662f\u5f00\u542f\u4e86 ENABLE_PREFIX_DELEGATION \u4f1a\u51cf\u5c11\u4e00\u4e2a ENI \u80fd\u7ba1\u7406\u7684 ip \u6570\u91cf\u3002 \u600e\u4e48\u4f7f\u7528 AWS VPC CNI \u5b9e\u73b0 NetworkPolicy \u5462\uff1f \u5728 kubernetes \u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 NetworkPolicy \u6765\u9650\u5236\u7f51\u7edc\u4e4b\u95f4\u7684\u8bbf\u95ee\u3002 \u5728\u6dfb\u52a0\u4e86 VPC-CNI addon \u4e4b\u540e\uff0c\u5982\u679c\u6ca1\u6709\u4efb\u4f55\u7684\u914d\u7f6e\uff0c\u9ed8\u8ba4\u7684 NETWORK_POLICY_ENFORCING_MODE \u662f standard\uff0c\u8fd9\u610f\u5473\u7740\u9ed8\u8ba4\u6240\u6709\u7684 Pod \u5728\u4efb\u4f55\u4e00\u4e2a namespace \u90fd\u53ef\u4ee5\u4e92\u76f8\u8bbf\u95ee\uff0c\u8fd9\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\uff0c\u8fd9\u5c31\u5bfc\u81f4\u53ef\u80fd\u51fa\u73b0\u5982\u679c\u7b2c\u4e09\u65b9\u5f15\u5165\u4e86 bug\uff0c\u5c31\u4f1a\u5bfc\u81f4\u6211\u4eec\u7684\u6570\u636e\u88ab\u62d6\u8d70\u3002\u6240\u4ee5\u5982\u679c\u60f3\u8981\u9650\u5236\u8bbf\u95ee\uff0c\u9700\u8981\u628a NETWORK_POLICY_ENFORCING_MODE \u503c\u8bbe\u7f6e\u4e3a: strict\uff0c\u8fd9\u610f\u5473\u7740\uff0c\u4efb\u4f55\u4e00\u4e2a Pod \u5728\u6ca1\u6709\u914d\u7f6e\u4efb\u4f55\u7684 NetworkPolicy \u90fd\u4e0d\u80fd\u4e92\u76f8\u8bbf\u95ee\u3002 \u6ce8\u610f: \u751a\u81f3\u540c\u4e00\u4e2a namespace \u7684 pod \u90fd\u4e0d\u80fd\u4e92\u76f8\u8bbf\u95ee \ud83d\ude09 (\u662f\u4e0d\u662f\u975e\u5e38\u4e25\u683c) \u9664\u4e86\u9700\u8981\u4fee\u6539 NETWORK_POLICY_ENFORCING_MODE \u503c\u4e3a: strict\uff0c\u8fd8\u9700\u8981\u5f00\u542f\u4e00\u4e2a VPC-CNI \u5185\u90e8\u7684 controller \u624d\u53ef\u4ee5\u3002\u53ef\u4ee5\u901a\u8fc7\u5728 VPC-CNI addon \u914d\u7f6e\u754c\u9762 -> Advanced configuration \u4e2d\u6dfb\u52a0 {\"enableNetworkPolicy\":\"true\"} \u624d\u53ef\u4ee5\uff0c\u8fd9\u6837\u4f1a\u4fee\u6539 kube-system namespace \u4e0b\u7684 amazon-vpc-cni configmap apiVersion: v1 kind: ConfigMap metadata: labels: app.kubernetes.io/instance: aws-vpc-cni app.kubernetes.io/managed-by: Helm app.kubernetes.io/name: aws-node app.kubernetes.io/version: v1.18.1 helm.sh/chart: aws-vpc-cni-1.18.1 k8s-app: aws-node name: amazon-vpc-cni namespace: kube-system data: branch-eni-cooldown: \"60\" enable-network-policy-controller: \"true\" # \u8fd9\u4e2a\u503c\u53d8\u4e3a true enable-windows-ipam: \"false\" enable-windows-prefix-delegation: \"false\" minimum-ip-target: \"3\" warm-ip-target: \"1\" warm-prefix-target: \"0\" \u4e4b\u540e\u5c31\u53ef\u4ee5\u521b\u5efa NetworkPolicy \u6765\u9650\u5236\u4e0d\u540c namespace \u4e4b\u95f4\u7684\u8bbf\u95ee\u4e86\u3002 \u6ce8\u610f\uff1a 1. \u901a\u8fc7 fargate \u542f\u52a8\u7684 pod \u4e0d\u4f1a\u6536\u5230 NetworkPolicy \u7684\u5f71\u54cd https://docs.aws.amazon.com/eks/latest/userguide/cni-network-policy.html 2. \u5fc5\u987b\u4e24\u8fb9\u90fd\u914d\u7f6e\u624d\u53ef\u4ee5\u8bbf\u95ee\u901a\uff0c\u5728\u4e00\u4e2a namespace \u5141\u8bb8 egress(\u51fa)\uff0c\u5728\u53e6\u4e00\u4e2a namespace \u5141\u8bb8 ingress(\u8fdb) 3. NetworkPolicy \u90fd\u53ea\u662f\u9488\u5bf9\u65b0\u521b\u5efa\u7684 Pod\uff0c\u6240\u4ee5\u6bcf\u6b21\u4fee\u6539\u4e86 NetworkPolicy \u6700\u597d\u90fd\u662f\u76f4\u63a5\u91cd\u542f\u4e00\u8d77\u53d7\u5230\u5f71\u54cd\u7684 Pod Example \u5141\u8bb8\u76f8\u540c namespace \u4e92\u76f8\u8bbf\u95ee apiVersion: networking.k8s.io/v1 kind: NetworkPolicy metadata: name: np spec: podSelector: {} policyTypes: - Ingress - Egress ingress: - from: - podSelector: {} egress: - to: - podSelector: {} \u5141\u8bb8\u8bbf\u95ee\u5916\u7f51\uff0c\u4f46\u662f\u4f7f\u7528 pod ip \u8fd8\u662f\u4e0d\u80fd\u8bbf\u95ee\u7684 apiVersion: networking.k8s.io/v1 kind: NetworkPolicy metadata: name: np spec: podSelector: {} policyTypes: - Egress egress: - to: - ipBlock: cidr: 0.0.0.0/0 \u5141\u8bb8\u8bbf\u95ee coredns \u6765\u89e3\u6790 svc apiVersion: networking.k8s.io/v1 kind: NetworkPolicy metadata: name: np spec: podSelector: {} policyTypes: - Egress egress: - to: - namespaceSelector: {} podSelector: matchLabels: k8s-app: kube-dns ports: - port: 53 protocol: UDP \u5141\u8bb8\u4e00\u4e2a namespace \u7684\u6240\u6709 pod \u8bbf\u95ee\u5f53\u524d namespace apiVersion: networking.k8s.io/v1 kind: NetworkPolicy metadata: name: np spec: podSelector: {} policyTypes: - Ingress ingress: - from: - podSelector: {} - from: - namespaceSelector: matchLabels: kubernetes.io/metadata.name: demo \u8fd9\u91cc\u6709\u4e00\u4e2a\u975e\u5e38\u597d\u7528\u7684\u7f51\u7ad9\uff0c\u53ef\u4ee5\u50bb\u74dc\u5f0f\u914d\u7f6e NetworkPolicy: https://editor.networkpolicy.io \ud83d\ude09","title":"AWS VPC CNI \u7f51\u7edc\u7b56\u7565"},{"location":"aws/eks/0-vpc-cni-%E7%BD%91%E7%BB%9C%E7%AD%96%E7%95%A5/#aws-vpc-cni","text":"\u5728\u4f7f\u7528 EKS \u7684\u65f6\u5019\uff0c\u4f1a\u6709\u4e00\u4e2a\u5b89\u5168\u7684\u70b9\u53ef\u4ee5\u8003\u8651 -> \u6211\u4eec\u5728 EKs \u4e2d\u90e8\u7f72\u7684\u5f88\u591a\u7684\u7b2c\u4e09\u7684\u4e1c\u897f\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u4f5c\u4e3a DevOps\uff0c\u5e76\u4e0d\u77e5\u9053\u5b83\u7684\u5e95\u5c42\u662f\u600e\u4e48\u5b9e\u73b0\u7684\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u5f88\u9ebb\u70e6\uff0c\u5f88\u6015\u522b\u4eba\u7684\u4e1c\u897f\u5f15\u5165\u4e86\u4e00\u4e2a\u4ec0\u4e48\u6837\u7684 bug \u5bfc\u81f4\u53ef\u4ee5\u88ab\u9ed1\u5ba2\u8fdb\u5165\u5230 Pod \u91cc \ud83d\udca5 \u6240\u6709\u7684 Pod \u90fd\u53ef\u4ee5\u522b\u4eba\u901a\u8fc7 API \u8bbf\u95ee\u5230\u4e86\uff01\u8fd9\u53ef\u4e0d\u662f\u4e00\u4e2a\u597d\u7684\u4e8b\u60c5\uff0c\u5bb9\u6613\u4e22\u5de5\u4f5c\u7684\u8bf4~ \u6c6a~ \u6240\u4ee5\u5462\uff0c\u4eca\u5929\u5c31\u6765\u5206\u4eab\u4e00\u4e2a\u8fd8\u633a\u6709\u610f\u601d\u7684\u4e1c\u897f(aws vpc cni network policy)","title":"AWS VPC CNI \u7f51\u7edc\u7b56\u7565"},{"location":"aws/eks/0-vpc-cni-%E7%BD%91%E7%BB%9C%E7%AD%96%E7%95%A5/#aws-vpc-cni_1","text":"","title":"AWS VPC CNI"},{"location":"aws/eks/0-vpc-cni-%E7%BD%91%E7%BB%9C%E7%AD%96%E7%95%A5/#aws-vpc-cni_2","text":"\u7b80\u5355\u6765\u8bf4\uff1a\u5b83\u5c31\u662f Kubernetes \u91cc\u4f17\u591a CNI \u7684\u4e00\u79cd\u5b9e\u73b0\u3002 \u53ea\u4e0d\u8fc7\u5b83\u662f\u57fa\u4e8e AWS VPC \u6765\u5b9e\u73b0\u7684\uff0c\u4e0d\u50cf\u522b\u7684 CNI \u63d2\u4ef6\u4e00\u6837\u3002\u50cf flannel\u3001calico \u8fd9\u79cd\u90fd\u662f\u4f1a\u4f7f\u7528 Kubernetes \u4e2d\u7684 IP address \u6765\u7ed9 Pod \u6dfb\u52a0 IP\uff0c\u8fd9\u91cc\u66f4\u591a\u4f7f\u7528\u7684\u662f Linux \u63d0\u4f9b\u7684 network namespace\u3001veth-pair \u6765\u5b9e\u73b0\u8fd9\u79cd\u529f\u80fd\uff0c\u9760 Linux \u7684 virtual network \u6765\u505a\u3002 \u4f46\u662f AWS \u5b83\u53e6\u8f9f\u8e4a\u5f84\uff1a\u5b83\u4f1a\u7ed9\u6bcf\u4e00\u4e2a\u8fd0\u884c\u5728 EC2 \u4e0a\u7684 Pod \u653e\u4e0a\u4e00\u4e2a ENI(\u4e5f\u5c31\u662f\u7f51\u5361) \u6765\u5b9e\u73b0\u5728 EKS \u4e2d\u7ed9 Pod assign IP\uff0c\u4e8e\u662f\u8fd9\u91cc\u5c31\u6709\u4e2a\u5f88\u5751\u7239\u7684\u95ee\u9898\uff0c\u4e00\u4e2a EC2 \u6240\u80fd attach \u7684 ENI \u662f\u6709\u9650\u7684\uff0c\u8fd9\u5c31\u5bfc\u81f4 CPU\u3001Memory \u6709\u65f6\u5019\u8fd8\u6ca1\u6709\u8fbe\u5230 80%\uff0c\u4f46\u662f\u5374\u51fa\u73b0 EC2 \u7684 ENI \u5df2\u7ecf\u7528\u5c3d\u4e86\u2026\u2026 \u4e0d\u8fc7\u6709\u4e00\u79cd\u89e3\u51b3\u529e\u6cd5\uff0c\u5728 VPC-CNI \u4e0a\u79f0\u4e4b\u4e3a: ENABLE_PREFIX_DELEGATION \uff0c\u5f00\u542f\u8fd9\u4e2a\u529f\u80fd\u4e4b\u540e\uff0cEC2 \u4f1a\u7ed9 ENI \u5206\u914d\u4e00\u4e2a /28 \u7684\u7f51\u7edc\u5757\uff0c\u8fd9\u6837\u8fd9\u4e2a ENI \u5c31\u53ef\u4ee5\u63a7\u5236\u7684\u662f\u8fd9\u4e2a /28 \u4e0b\u7684\u6240\u6709 ip \u800c\u4e0d\u4ec5\u4ec5\u662f\u51e0\u4e2a\u72ec\u7acb\u7684 ip\u3002 Note: \u8fd9\u91cc\u4f1a\u51fa\u73b0 ENI \u672c\u6765\u53ef\u4ee5\u652f\u6301 20 \u4e2a ip\uff0c\u4f46\u662f\u5f00\u542f\u4e86 ENABLE_PREFIX_DELEGATION \u4f1a\u51cf\u5c11\u4e00\u4e2a ENI \u80fd\u7ba1\u7406\u7684 ip \u6570\u91cf\u3002","title":"\u4ec0\u4e48\u662f AWS VPC CNI \u5462\uff1f"},{"location":"aws/eks/0-vpc-cni-%E7%BD%91%E7%BB%9C%E7%AD%96%E7%95%A5/#aws-vpc-cni-networkpolicy","text":"\u5728 kubernetes \u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 NetworkPolicy \u6765\u9650\u5236\u7f51\u7edc\u4e4b\u95f4\u7684\u8bbf\u95ee\u3002 \u5728\u6dfb\u52a0\u4e86 VPC-CNI addon \u4e4b\u540e\uff0c\u5982\u679c\u6ca1\u6709\u4efb\u4f55\u7684\u914d\u7f6e\uff0c\u9ed8\u8ba4\u7684 NETWORK_POLICY_ENFORCING_MODE \u662f standard\uff0c\u8fd9\u610f\u5473\u7740\u9ed8\u8ba4\u6240\u6709\u7684 Pod \u5728\u4efb\u4f55\u4e00\u4e2a namespace \u90fd\u53ef\u4ee5\u4e92\u76f8\u8bbf\u95ee\uff0c\u8fd9\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\uff0c\u8fd9\u5c31\u5bfc\u81f4\u53ef\u80fd\u51fa\u73b0\u5982\u679c\u7b2c\u4e09\u65b9\u5f15\u5165\u4e86 bug\uff0c\u5c31\u4f1a\u5bfc\u81f4\u6211\u4eec\u7684\u6570\u636e\u88ab\u62d6\u8d70\u3002\u6240\u4ee5\u5982\u679c\u60f3\u8981\u9650\u5236\u8bbf\u95ee\uff0c\u9700\u8981\u628a NETWORK_POLICY_ENFORCING_MODE \u503c\u8bbe\u7f6e\u4e3a: strict\uff0c\u8fd9\u610f\u5473\u7740\uff0c\u4efb\u4f55\u4e00\u4e2a Pod \u5728\u6ca1\u6709\u914d\u7f6e\u4efb\u4f55\u7684 NetworkPolicy \u90fd\u4e0d\u80fd\u4e92\u76f8\u8bbf\u95ee\u3002 \u6ce8\u610f: \u751a\u81f3\u540c\u4e00\u4e2a namespace \u7684 pod \u90fd\u4e0d\u80fd\u4e92\u76f8\u8bbf\u95ee \ud83d\ude09 (\u662f\u4e0d\u662f\u975e\u5e38\u4e25\u683c) \u9664\u4e86\u9700\u8981\u4fee\u6539 NETWORK_POLICY_ENFORCING_MODE \u503c\u4e3a: strict\uff0c\u8fd8\u9700\u8981\u5f00\u542f\u4e00\u4e2a VPC-CNI \u5185\u90e8\u7684 controller \u624d\u53ef\u4ee5\u3002\u53ef\u4ee5\u901a\u8fc7\u5728 VPC-CNI addon \u914d\u7f6e\u754c\u9762 -> Advanced configuration \u4e2d\u6dfb\u52a0 {\"enableNetworkPolicy\":\"true\"} \u624d\u53ef\u4ee5\uff0c\u8fd9\u6837\u4f1a\u4fee\u6539 kube-system namespace \u4e0b\u7684 amazon-vpc-cni configmap apiVersion: v1 kind: ConfigMap metadata: labels: app.kubernetes.io/instance: aws-vpc-cni app.kubernetes.io/managed-by: Helm app.kubernetes.io/name: aws-node app.kubernetes.io/version: v1.18.1 helm.sh/chart: aws-vpc-cni-1.18.1 k8s-app: aws-node name: amazon-vpc-cni namespace: kube-system data: branch-eni-cooldown: \"60\" enable-network-policy-controller: \"true\" # \u8fd9\u4e2a\u503c\u53d8\u4e3a true enable-windows-ipam: \"false\" enable-windows-prefix-delegation: \"false\" minimum-ip-target: \"3\" warm-ip-target: \"1\" warm-prefix-target: \"0\" \u4e4b\u540e\u5c31\u53ef\u4ee5\u521b\u5efa NetworkPolicy \u6765\u9650\u5236\u4e0d\u540c namespace \u4e4b\u95f4\u7684\u8bbf\u95ee\u4e86\u3002 \u6ce8\u610f\uff1a 1. \u901a\u8fc7 fargate \u542f\u52a8\u7684 pod \u4e0d\u4f1a\u6536\u5230 NetworkPolicy \u7684\u5f71\u54cd https://docs.aws.amazon.com/eks/latest/userguide/cni-network-policy.html 2. \u5fc5\u987b\u4e24\u8fb9\u90fd\u914d\u7f6e\u624d\u53ef\u4ee5\u8bbf\u95ee\u901a\uff0c\u5728\u4e00\u4e2a namespace \u5141\u8bb8 egress(\u51fa)\uff0c\u5728\u53e6\u4e00\u4e2a namespace \u5141\u8bb8 ingress(\u8fdb) 3. NetworkPolicy \u90fd\u53ea\u662f\u9488\u5bf9\u65b0\u521b\u5efa\u7684 Pod\uff0c\u6240\u4ee5\u6bcf\u6b21\u4fee\u6539\u4e86 NetworkPolicy \u6700\u597d\u90fd\u662f\u76f4\u63a5\u91cd\u542f\u4e00\u8d77\u53d7\u5230\u5f71\u54cd\u7684 Pod","title":"\u600e\u4e48\u4f7f\u7528 AWS VPC CNI \u5b9e\u73b0 NetworkPolicy \u5462\uff1f"},{"location":"aws/eks/0-vpc-cni-%E7%BD%91%E7%BB%9C%E7%AD%96%E7%95%A5/#example","text":"\u5141\u8bb8\u76f8\u540c namespace \u4e92\u76f8\u8bbf\u95ee apiVersion: networking.k8s.io/v1 kind: NetworkPolicy metadata: name: np spec: podSelector: {} policyTypes: - Ingress - Egress ingress: - from: - podSelector: {} egress: - to: - podSelector: {} \u5141\u8bb8\u8bbf\u95ee\u5916\u7f51\uff0c\u4f46\u662f\u4f7f\u7528 pod ip \u8fd8\u662f\u4e0d\u80fd\u8bbf\u95ee\u7684 apiVersion: networking.k8s.io/v1 kind: NetworkPolicy metadata: name: np spec: podSelector: {} policyTypes: - Egress egress: - to: - ipBlock: cidr: 0.0.0.0/0 \u5141\u8bb8\u8bbf\u95ee coredns \u6765\u89e3\u6790 svc apiVersion: networking.k8s.io/v1 kind: NetworkPolicy metadata: name: np spec: podSelector: {} policyTypes: - Egress egress: - to: - namespaceSelector: {} podSelector: matchLabels: k8s-app: kube-dns ports: - port: 53 protocol: UDP \u5141\u8bb8\u4e00\u4e2a namespace \u7684\u6240\u6709 pod \u8bbf\u95ee\u5f53\u524d namespace apiVersion: networking.k8s.io/v1 kind: NetworkPolicy metadata: name: np spec: podSelector: {} policyTypes: - Ingress ingress: - from: - podSelector: {} - from: - namespaceSelector: matchLabels: kubernetes.io/metadata.name: demo \u8fd9\u91cc\u6709\u4e00\u4e2a\u975e\u5e38\u597d\u7528\u7684\u7f51\u7ad9\uff0c\u53ef\u4ee5\u50bb\u74dc\u5f0f\u914d\u7f6e NetworkPolicy: https://editor.networkpolicy.io \ud83d\ude09","title":"Example"},{"location":"aws/iam/0-%E8%AE%A4%E8%AF%86%20sso/","text":"\u8ba4\u8bc6 AWS SSO \u4eca\u5929\u5728\u5de5\u4f5c\u4e2d\u7b2c\u4e00\u6b21\u60f3\u7814\u7a76\u7814\u7a76\uff0c\u4e3a\u4ec0\u4e48\u6bcf\u6b21\u901a\u8fc7 OKTA\u3001Mirosoft AD \u767b\u5f55 AWS \u4e4b\u540e\uff0c\u4f1a\u51fa\u73b0\u5f88\u591a\u4e2a account \u7684\u9009\u62e9\u7a97\u53e3\u5462\uff0c\u800c\u4e14\u4e3a\u4ec0\u4e48\u70b9\u4e86\u4e00\u4e2a account \u4e4b\u540e\uff0c\u4f1a\u51fa\u73b0\u9009\u62e9\u591a\u4e2a role \u5462\uff1f (\u81ea\u5df1\u6ca1\u6709 AWS \u8d26\u53f7\uff0c\u622a\u56fe\u662f\u8d39\u52b2\u4e86 \ud83d\ude2d) AWS SSO \u5728 AWS \u4e2d\uff0c\u53ef\u4ee5\u5728\u5bf9\u5e94\u7684 account \u4e2d enable aws sso \u5b8c\u4e86\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u521b\u5efa permission set \u4e86\uff0c\u8fd9\u4e2a permission set \u7684\u4f5c\u7528\uff0c\u5c31\u662f\u7ed9\u5176\u4ed6\u4eba assume \u7528\u7684\uff0c\u5b83\u7684 trust relationship \u662f\uff1a { \"Version\": \"2012-10-17\", \"Statement\": [ { \"Effect\": \"Allow\", \"Principal\": { \"Service\": \"sso.amazonaws.com\" }, \"Action\": \"sts:AssumeRole\" } ] } \u53ef\u4ee5\u88ab\u4efb\u4f55\u4eba assume \u8fc7\u6765\u3002\u5f53\u4efb\u4f55\u4eba\u901a\u8fc7\u7b2c\u4e09\u65b9\u767b\u5f55\u4ee5\u540e\uff0c\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 role \u8fd9\u4e2a role \u624d\u662f\u6700\u7ec8\u5728 aws sso \u754c\u9762\u4e0a\u521b\u5efa\u7684 role\uff0c\u8fd9\u6837\u901a\u8fc7\u4e2d\u95f4\u7684 assume \u64cd\u4f5c\u5b9e\u73b0\u4e86\u9650\u5236\u767b\u5f55\u7684\u65f6\u95f4\u3002 \u901a\u8fc7 Terraform \u521b\u5efa # It's used to get the SSO instance arns and identity_store_ids. # https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/ssoadmin_instances data \"aws_ssoadmin_instances\" \"goudan\" {} resource \"aws_ssoadmin_permission_set\" \"permission_set\" { name = \"goudan_role\" instance_arn = tolist(data.aws_ssoadmin_instances.goudan.arns)[0] session_duration = \"PT2H\" } resource \"aws_ssoadmin_managed_policy_attachment\" \"admin_4_permission_set\" { instance_arn = aws_ssoadmin_permission_set.permission_set.instance_arn managed_policy_arn = \"arn:aws:iam::aws:policy/AdministratorAccess\" permission_set_arn = aws_ssoadmin_permission_set.permission_set.arn }","title":"\u8ba4\u8bc6 AWS SSO"},{"location":"aws/iam/0-%E8%AE%A4%E8%AF%86%20sso/#aws-sso","text":"\u4eca\u5929\u5728\u5de5\u4f5c\u4e2d\u7b2c\u4e00\u6b21\u60f3\u7814\u7a76\u7814\u7a76\uff0c\u4e3a\u4ec0\u4e48\u6bcf\u6b21\u901a\u8fc7 OKTA\u3001Mirosoft AD \u767b\u5f55 AWS \u4e4b\u540e\uff0c\u4f1a\u51fa\u73b0\u5f88\u591a\u4e2a account \u7684\u9009\u62e9\u7a97\u53e3\u5462\uff0c\u800c\u4e14\u4e3a\u4ec0\u4e48\u70b9\u4e86\u4e00\u4e2a account \u4e4b\u540e\uff0c\u4f1a\u51fa\u73b0\u9009\u62e9\u591a\u4e2a role \u5462\uff1f (\u81ea\u5df1\u6ca1\u6709 AWS \u8d26\u53f7\uff0c\u622a\u56fe\u662f\u8d39\u52b2\u4e86 \ud83d\ude2d)","title":"\u8ba4\u8bc6 AWS SSO"},{"location":"aws/iam/0-%E8%AE%A4%E8%AF%86%20sso/#aws-sso_1","text":"\u5728 AWS \u4e2d\uff0c\u53ef\u4ee5\u5728\u5bf9\u5e94\u7684 account \u4e2d enable aws sso \u5b8c\u4e86\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u521b\u5efa permission set \u4e86\uff0c\u8fd9\u4e2a permission set \u7684\u4f5c\u7528\uff0c\u5c31\u662f\u7ed9\u5176\u4ed6\u4eba assume \u7528\u7684\uff0c\u5b83\u7684 trust relationship \u662f\uff1a { \"Version\": \"2012-10-17\", \"Statement\": [ { \"Effect\": \"Allow\", \"Principal\": { \"Service\": \"sso.amazonaws.com\" }, \"Action\": \"sts:AssumeRole\" } ] } \u53ef\u4ee5\u88ab\u4efb\u4f55\u4eba assume \u8fc7\u6765\u3002\u5f53\u4efb\u4f55\u4eba\u901a\u8fc7\u7b2c\u4e09\u65b9\u767b\u5f55\u4ee5\u540e\uff0c\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 role \u8fd9\u4e2a role \u624d\u662f\u6700\u7ec8\u5728 aws sso \u754c\u9762\u4e0a\u521b\u5efa\u7684 role\uff0c\u8fd9\u6837\u901a\u8fc7\u4e2d\u95f4\u7684 assume \u64cd\u4f5c\u5b9e\u73b0\u4e86\u9650\u5236\u767b\u5f55\u7684\u65f6\u95f4\u3002","title":"AWS SSO"},{"location":"aws/iam/0-%E8%AE%A4%E8%AF%86%20sso/#terraform","text":"# It's used to get the SSO instance arns and identity_store_ids. # https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/ssoadmin_instances data \"aws_ssoadmin_instances\" \"goudan\" {} resource \"aws_ssoadmin_permission_set\" \"permission_set\" { name = \"goudan_role\" instance_arn = tolist(data.aws_ssoadmin_instances.goudan.arns)[0] session_duration = \"PT2H\" } resource \"aws_ssoadmin_managed_policy_attachment\" \"admin_4_permission_set\" { instance_arn = aws_ssoadmin_permission_set.permission_set.instance_arn managed_policy_arn = \"arn:aws:iam::aws:policy/AdministratorAccess\" permission_set_arn = aws_ssoadmin_permission_set.permission_set.arn }","title":"\u901a\u8fc7 Terraform \u521b\u5efa"},{"location":"container/0-build-cross-image/","text":"Build cross images \u65e5\u5e38\u4f7f\u7528 mac \u4f5c\u4e3a\u5f00\u53d1\u7535\u8111\uff0c\u8fd9\u5c31\u5bfc\u81f4\u6709\u4e9b\u65f6\u5019\u5728 build image\uff0c\u9700\u8981\u540c\u65f6 build \u4e24\u4e2a platform arm, amd \u7684 images\uff0carm \u6709\u65f6\u5019\u4f1a\u7528\u6765\u9a8c\u8bc1 image \u662f\u5426\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\uff0camd \u7684\u7528\u6765\u5728\u7ebf\u4e0a\u8fd0\u884c\u3002\u90a3\u4e48\u4f7f\u7528\u600e\u4e48\u6784\u5efa\u591a\u4e2a platform \u7684 inage \u5c31\u6210\u4e86\u4e00\u4e2a\u95ee\u9898\u3002 \u4f7f\u7528\u591a\u4e2a platform node \u5728\u4f7f\u7528 docker\u3001buildah\u3001buildx \u8fd9\u79cd\u5de5\u5177\u7684\u65f6\u5019\uff0c\u80fd\u6784\u5efa\u51fa\u4ec0\u4e48 platform image \u90fd\u662f\u57fa\u4e8e node platform \u6765\u51b3\u5b9a\u7684\u3002\u6240\u4ee5\u6bd4\u8f83\u7b80\u5355\u7684\u65b9\u6cd5\u5c31\u662f\u4f7f\u7528\u591a\u4e2a platform node \u6765\u76f4\u63a5 build \u591a\u4e2a images\u3002\u6700\u540e\u521b\u5efa manifest \u6765\u505a\u5230 cross platform\u3002 \u4f46\u662f\u4e5f\u6709\u4e00\u4e2a\u5c0f\u7f3a\u70b9\uff1a\u4f1a\u542f\u52a8\u591a\u4e2a node \u5bfc\u81f4 cost \u589e\u52a0 \u4f7f\u7528 qemu \u901a\u8fc7\u6a21\u62df architecture qemu \u53ef\u4ee5\u6a21\u62df architecture \u6765\u5b8c\u6210\u6784\u5efa\u591a\u4e2a platform image \u5b83\u53ea\u6709\u4e00\u4e2a\u4e0d\u597d\u7684\u5730\u65b9\uff1a\u901f\u5ea6\u6162\uff0c\u56e0\u4e3a\u662f\u901a\u8fc7\u8f6f\u4ef6\u6a21\u62df\u7684 architecture \u57fa\u7840\u529f\u80fd\uff0c\u8fd9\u5c31\u5bfc\u81f4\u4f1a\u6bd4\u76f4\u63a5\u4f7f\u7528 node \u901f\u5ea6\u6162\u5f88\u591a\uff0c\u4f46\u662f\u5728\u6211\u7684\u4f53\u9a8c\u6765\u8bf4\uff0c\u8fd8\u80fd\u63a5\u53d7\u3002 \u73b0\u5728\u57fa\u672c\u4e0a\u90fd\u662f\u4f7f\u7528 kubernetes pod \u4f5c\u4e3a ci agent\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u5728\u6bcf\u4e00\u4e2a agent node \u4e0a\u901a\u8fc7 DaemonSet \u542f\u52a8 qemu \u8fd9\u4e2a\u5de5\u5177\u3002\u8fd9\u91cc\u6709\u4e2a DaemonSet \u7684\u4f8b\u5b50\uff1a --- # Source: qemu-user-static/templates/daemonset.yaml apiVersion: apps/v1 kind: DaemonSet metadata: name: qemu-user-static spec: selector: matchLabels: app.kubernetes.io/name: qemu-user-static app.kubernetes.io/instance: qemu-user-static template: metadata: labels: app.kubernetes.io/name: qemu-user-static app.kubernetes.io/instance: qemu-user-static spec: initContainers: - name: qemu image: \"multiarch/qemu-user-static:7.2.0-1\" # tag refer to https://github.com/multiarch/qemu-user-static/tags imagePullPolicy: IfNotPresent securityContext: privileged: true seLinuxOptions: level: s0 args: - --reset - -p - \"yes\" containers: - image: \"registry.k8s.io/pause:3.10\" name: pause qemu \u88c5\u597d\u540e\u5c31\u53ef\u4ee5\u4f7f\u7528 buildah\u3001buildx \u8fd9\u79cd\u547d\u4ee4\u76f4\u63a5 build cross imaeg\u3002","title":"Build cross images"},{"location":"container/0-build-cross-image/#build-cross-images","text":"\u65e5\u5e38\u4f7f\u7528 mac \u4f5c\u4e3a\u5f00\u53d1\u7535\u8111\uff0c\u8fd9\u5c31\u5bfc\u81f4\u6709\u4e9b\u65f6\u5019\u5728 build image\uff0c\u9700\u8981\u540c\u65f6 build \u4e24\u4e2a platform arm, amd \u7684 images\uff0carm \u6709\u65f6\u5019\u4f1a\u7528\u6765\u9a8c\u8bc1 image \u662f\u5426\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\uff0camd \u7684\u7528\u6765\u5728\u7ebf\u4e0a\u8fd0\u884c\u3002\u90a3\u4e48\u4f7f\u7528\u600e\u4e48\u6784\u5efa\u591a\u4e2a platform \u7684 inage \u5c31\u6210\u4e86\u4e00\u4e2a\u95ee\u9898\u3002","title":"Build cross images"},{"location":"container/0-build-cross-image/#platform-node","text":"\u5728\u4f7f\u7528 docker\u3001buildah\u3001buildx \u8fd9\u79cd\u5de5\u5177\u7684\u65f6\u5019\uff0c\u80fd\u6784\u5efa\u51fa\u4ec0\u4e48 platform image \u90fd\u662f\u57fa\u4e8e node platform \u6765\u51b3\u5b9a\u7684\u3002\u6240\u4ee5\u6bd4\u8f83\u7b80\u5355\u7684\u65b9\u6cd5\u5c31\u662f\u4f7f\u7528\u591a\u4e2a platform node \u6765\u76f4\u63a5 build \u591a\u4e2a images\u3002\u6700\u540e\u521b\u5efa manifest \u6765\u505a\u5230 cross platform\u3002 \u4f46\u662f\u4e5f\u6709\u4e00\u4e2a\u5c0f\u7f3a\u70b9\uff1a\u4f1a\u542f\u52a8\u591a\u4e2a node \u5bfc\u81f4 cost \u589e\u52a0","title":"\u4f7f\u7528\u591a\u4e2a platform node"},{"location":"container/0-build-cross-image/#qemu-architecture","text":"qemu \u53ef\u4ee5\u6a21\u62df architecture \u6765\u5b8c\u6210\u6784\u5efa\u591a\u4e2a platform image \u5b83\u53ea\u6709\u4e00\u4e2a\u4e0d\u597d\u7684\u5730\u65b9\uff1a\u901f\u5ea6\u6162\uff0c\u56e0\u4e3a\u662f\u901a\u8fc7\u8f6f\u4ef6\u6a21\u62df\u7684 architecture \u57fa\u7840\u529f\u80fd\uff0c\u8fd9\u5c31\u5bfc\u81f4\u4f1a\u6bd4\u76f4\u63a5\u4f7f\u7528 node \u901f\u5ea6\u6162\u5f88\u591a\uff0c\u4f46\u662f\u5728\u6211\u7684\u4f53\u9a8c\u6765\u8bf4\uff0c\u8fd8\u80fd\u63a5\u53d7\u3002 \u73b0\u5728\u57fa\u672c\u4e0a\u90fd\u662f\u4f7f\u7528 kubernetes pod \u4f5c\u4e3a ci agent\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u5728\u6bcf\u4e00\u4e2a agent node \u4e0a\u901a\u8fc7 DaemonSet \u542f\u52a8 qemu \u8fd9\u4e2a\u5de5\u5177\u3002\u8fd9\u91cc\u6709\u4e2a DaemonSet \u7684\u4f8b\u5b50\uff1a --- # Source: qemu-user-static/templates/daemonset.yaml apiVersion: apps/v1 kind: DaemonSet metadata: name: qemu-user-static spec: selector: matchLabels: app.kubernetes.io/name: qemu-user-static app.kubernetes.io/instance: qemu-user-static template: metadata: labels: app.kubernetes.io/name: qemu-user-static app.kubernetes.io/instance: qemu-user-static spec: initContainers: - name: qemu image: \"multiarch/qemu-user-static:7.2.0-1\" # tag refer to https://github.com/multiarch/qemu-user-static/tags imagePullPolicy: IfNotPresent securityContext: privileged: true seLinuxOptions: level: s0 args: - --reset - -p - \"yes\" containers: - image: \"registry.k8s.io/pause:3.10\" name: pause qemu \u88c5\u597d\u540e\u5c31\u53ef\u4ee5\u4f7f\u7528 buildah\u3001buildx \u8fd9\u79cd\u547d\u4ee4\u76f4\u63a5 build cross imaeg\u3002","title":"\u4f7f\u7528 qemu \u901a\u8fc7\u6a21\u62df architecture"},{"location":"iptables/0-%E8%AE%A4%E8%AF%86%20iptables/","text":"\u8ba4\u8bc6 Linux iptables IPTABLES \u662f\u4e0e\u6700\u65b0\u7684 3.5 \u7248\u672c Linux \u5185\u6838\u96c6\u6210\u7684 IP \u4fe1\u606f\u5305\u8fc7\u6ee4\u7cfb\u7edf\u3002\u5982\u679c Linux \u7cfb\u7edf\u8fde\u63a5\u5230\u56e0\u7279\u7f51\u6216 LAN\u3001\u670d\u52a1\u5668\u6216\u8fde\u63a5 LAN \u548c\u56e0\u7279\u7f51\u7684\u4ee3\u7406\u670d\u52a1 \u5668\uff0c\u5219\u8be5\u7cfb\u7edf\u6709\u5229\u4e8e\u5728 Linux \u7cfb\u7edf\u4e0a\u66f4\u597d\u5730\u63a7\u5236 IP \u4fe1\u606f\u5305\u8fc7\u6ee4\u548c\u9632\u706b\u5899\u914d\u7f6e\u3002 \u540c\u65f6 iptables \u4e5f\u662f kubernetes \u4e2d\u5185\u7f6e\u7684\u7f51\u7edc\u8fde\u63a5\u65b9\u5f0f(\u6211\u8bb0\u5f97\u662f)\u3002 iptables 4\u8868\u4e94\u94fe \u5728 Linux \u4e2d\uff0ciptables \u662f\u4e00\u4e2a\u7528\u4e8e\u914d\u7f6e IPv4 \u6570\u636e\u5305\u8fc7\u6ee4\u89c4\u5219\u7684\u5de5\u5177\u3002iptables \u4f7f\u7528\u8868\uff08tables\uff09\u548c\u94fe\uff08chains\uff09\u7684\u6982\u5ff5\u6765\u7ec4\u7ec7\u89c4\u5219\u3002IPv4 \u7684 iptables \u652f\u6301\u56db\u4e2a\u8868\uff0c\u6bcf\u4e2a\u8868\u5305\u542b\u82e5\u5e72\u4e2a\u94fe\u3002\u8fd9\u56db\u4e2a\u8868\u5206\u522b\u662f\uff1afilter\u3001nat\u3001\u3010mangle \u548c raw\u3011(\u4e0d\u5e38\u7528)\u3002 filter \u8868: Chains: INPUT: \u7528\u4e8e\u5904\u7406\u4f20\u5165\u7684\u6570\u636e\u5305\u3002 FORWARD: \u7528\u4e8e\u5904\u7406\u901a\u8fc7\u7cfb\u7edf\u7684\u6570\u636e\u5305\u3002 OUTPUT: \u7528\u4e8e\u5904\u7406\u672c\u5730\u751f\u6210\u7684\u6570\u636e\u5305\u3002 nat \u8868: Chains: PREROUTING: \u5728\u6570\u636e\u5305\u8fdb\u5165\u8def\u7531\u4e4b\u524d\u5904\u7406\uff0c\u7528\u4e8e\u76ee\u6807\u5730\u5740\u8f6c\u6362\u3002 POSTROUTING: \u5728\u6570\u636e\u5305\u79bb\u5f00\u8def\u7531\u4e4b\u540e\u5904\u7406\uff0c\u7528\u4e8e\u6e90\u5730\u5740\u8f6c\u6362\u3002 OUTPUT: \u7528\u4e8e\u672c\u5730\u751f\u6210\u7684\u6570\u636e\u5305\u7684\u76ee\u6807\u5730\u5740\u8f6c\u6362\u3002 mangle \u8868: Chains: PREROUTING: \u5728\u6570\u636e\u5305\u8fdb\u5165\u8def\u7531\u4e4b\u524d\u5904\u7406\u3002 INPUT: \u5904\u7406\u4f20\u5165\u7684\u6570\u636e\u5305\u3002 FORWARD: \u5904\u7406\u901a\u8fc7\u7cfb\u7edf\u7684\u6570\u636e\u5305\u3002 OUTPUT: \u5904\u7406\u672c\u5730\u751f\u6210\u7684\u6570\u636e\u5305\u3002 POSTROUTING: \u5728\u6570\u636e\u5305\u79bb\u5f00\u8def\u7531\u4e4b\u540e\u5904\u7406\u3002 raw \u8868: Chains: PREROUTING: \u5728\u6570\u636e\u5305\u8fdb\u5165\u8def\u7531\u4e4b\u524d\u5904\u7406\uff0c\u4e0d\u4f1a\u8ddf\u8ddf\u8e2a\u72b6\u6001\u6216\u8fde\u63a5\u3002 OUTPUT: \u7528\u4e8e\u5904\u7406\u672c\u5730\u751f\u6210\u7684\u6570\u636e\u5305\uff0c\u4e0d\u4f1a\u8ddf\u8e2a\u72b6\u6001\u6216\u8fde\u63a5\u3002 # \u53ef\u4ee5\u4f7f\u7528 iptables \u547d\u4ee4\u67e5\u770b # -n: Numeric output. IP addresses and port numbers will be printed in numeric format. By default, the program # will try to display them as host names, network names, or services (whenever applicable). # -L: List all chains. iptables -nL # \u9650\u5236\u4ece 192.168.56.10 \u6765\u7684\u6240\u6709\u8bf7\u6c42 # -t: specific which table # -I: insert rule into the selected chain # -s: source ip # -j: target(ACCEPT, DROP, REJECT) # \u9ed8\u8ba4\u4f1a\u52a0\u5230\u5f53\u524d chain \u7684\u7b2c\u4e00\u4e2a iptables -t filter -I INPUT -s 192.168.56.10 -j DROP # -D: delete one or more rule from the selected chain iptables -t filter -D INPUT 1 # \u9650\u5236\u4ece 192.168.56.10 \u8bbf\u95ee 80 \u7aef\u53e3 # -p: protocol, The specified protocol can be one of tcp, udp, udplite, icmp, icmpv6,esp, ah, sctp, mh or the # special keyword \"all\". # --dport: destination port. iptables -t filter -I INPUT -s 192.168.56.10 -j DROP -p tcp --dport 80 # \u591a\u4e2a\u7aef\u53e3 iptables -t filter -I INPUT -s 192.168.56.10 -j DROP -p tcp -m mutiport --dport 80,443 # \u8fde\u7eed\u7684\u7aef\u53e3\u8303\u56f4: 1 - 1024 iptables -t filter -I INPUT -s 192.168.56.10 -j DROP -p tcp--dport 1:1024 Linux \u5185\u6838\u53c2\u6570 Linux \u5185\u6838\u53c2\u6570\u914d\u7f6e\u6587\u4ef6\u5728 /etc/sysctl.conf \uff0c\u6bcf\u6b21\u4fee\u6539\u4e4b\u540e\uff0c\u9700\u8981\u8fd0\u884c sysctl -p \u751f\u6548 \u4e34\u65f6\u4fee\u6539\u5185\u6838\u53c2\u6570\uff0c\u6240\u6709\u7684\u53c2\u6570\u90fd\u662f\u4e00\u4e2a\u6587\u4ef6\uff0c\u5728 /proc/sys/ \u6587\u4ef6\u5939\u4e2d\uff0c\u4f8b\u5982 net.ipv4.icmp_echo_ignore_all \u914d\u7f6e\u6240\u5bf9\u5e94\u7684\u6587\u4ef6\u662f\uff1a /proc/sys/net/ipv4/icmp_echo_ignore_all \u67e5\u770b\u6240\u6709\u5185\u6838\u53c2\u6570: sysctl -a","title":"\u8ba4\u8bc6 Linux iptables"},{"location":"iptables/0-%E8%AE%A4%E8%AF%86%20iptables/#linux-iptables","text":"IPTABLES \u662f\u4e0e\u6700\u65b0\u7684 3.5 \u7248\u672c Linux \u5185\u6838\u96c6\u6210\u7684 IP \u4fe1\u606f\u5305\u8fc7\u6ee4\u7cfb\u7edf\u3002\u5982\u679c Linux \u7cfb\u7edf\u8fde\u63a5\u5230\u56e0\u7279\u7f51\u6216 LAN\u3001\u670d\u52a1\u5668\u6216\u8fde\u63a5 LAN \u548c\u56e0\u7279\u7f51\u7684\u4ee3\u7406\u670d\u52a1 \u5668\uff0c\u5219\u8be5\u7cfb\u7edf\u6709\u5229\u4e8e\u5728 Linux \u7cfb\u7edf\u4e0a\u66f4\u597d\u5730\u63a7\u5236 IP \u4fe1\u606f\u5305\u8fc7\u6ee4\u548c\u9632\u706b\u5899\u914d\u7f6e\u3002 \u540c\u65f6 iptables \u4e5f\u662f kubernetes \u4e2d\u5185\u7f6e\u7684\u7f51\u7edc\u8fde\u63a5\u65b9\u5f0f(\u6211\u8bb0\u5f97\u662f)\u3002","title":"\u8ba4\u8bc6 Linux iptables"},{"location":"iptables/0-%E8%AE%A4%E8%AF%86%20iptables/#iptables-4","text":"\u5728 Linux \u4e2d\uff0ciptables \u662f\u4e00\u4e2a\u7528\u4e8e\u914d\u7f6e IPv4 \u6570\u636e\u5305\u8fc7\u6ee4\u89c4\u5219\u7684\u5de5\u5177\u3002iptables \u4f7f\u7528\u8868\uff08tables\uff09\u548c\u94fe\uff08chains\uff09\u7684\u6982\u5ff5\u6765\u7ec4\u7ec7\u89c4\u5219\u3002IPv4 \u7684 iptables \u652f\u6301\u56db\u4e2a\u8868\uff0c\u6bcf\u4e2a\u8868\u5305\u542b\u82e5\u5e72\u4e2a\u94fe\u3002\u8fd9\u56db\u4e2a\u8868\u5206\u522b\u662f\uff1afilter\u3001nat\u3001\u3010mangle \u548c raw\u3011(\u4e0d\u5e38\u7528)\u3002 filter \u8868: Chains: INPUT: \u7528\u4e8e\u5904\u7406\u4f20\u5165\u7684\u6570\u636e\u5305\u3002 FORWARD: \u7528\u4e8e\u5904\u7406\u901a\u8fc7\u7cfb\u7edf\u7684\u6570\u636e\u5305\u3002 OUTPUT: \u7528\u4e8e\u5904\u7406\u672c\u5730\u751f\u6210\u7684\u6570\u636e\u5305\u3002 nat \u8868: Chains: PREROUTING: \u5728\u6570\u636e\u5305\u8fdb\u5165\u8def\u7531\u4e4b\u524d\u5904\u7406\uff0c\u7528\u4e8e\u76ee\u6807\u5730\u5740\u8f6c\u6362\u3002 POSTROUTING: \u5728\u6570\u636e\u5305\u79bb\u5f00\u8def\u7531\u4e4b\u540e\u5904\u7406\uff0c\u7528\u4e8e\u6e90\u5730\u5740\u8f6c\u6362\u3002 OUTPUT: \u7528\u4e8e\u672c\u5730\u751f\u6210\u7684\u6570\u636e\u5305\u7684\u76ee\u6807\u5730\u5740\u8f6c\u6362\u3002 mangle \u8868: Chains: PREROUTING: \u5728\u6570\u636e\u5305\u8fdb\u5165\u8def\u7531\u4e4b\u524d\u5904\u7406\u3002 INPUT: \u5904\u7406\u4f20\u5165\u7684\u6570\u636e\u5305\u3002 FORWARD: \u5904\u7406\u901a\u8fc7\u7cfb\u7edf\u7684\u6570\u636e\u5305\u3002 OUTPUT: \u5904\u7406\u672c\u5730\u751f\u6210\u7684\u6570\u636e\u5305\u3002 POSTROUTING: \u5728\u6570\u636e\u5305\u79bb\u5f00\u8def\u7531\u4e4b\u540e\u5904\u7406\u3002 raw \u8868: Chains: PREROUTING: \u5728\u6570\u636e\u5305\u8fdb\u5165\u8def\u7531\u4e4b\u524d\u5904\u7406\uff0c\u4e0d\u4f1a\u8ddf\u8ddf\u8e2a\u72b6\u6001\u6216\u8fde\u63a5\u3002 OUTPUT: \u7528\u4e8e\u5904\u7406\u672c\u5730\u751f\u6210\u7684\u6570\u636e\u5305\uff0c\u4e0d\u4f1a\u8ddf\u8e2a\u72b6\u6001\u6216\u8fde\u63a5\u3002 # \u53ef\u4ee5\u4f7f\u7528 iptables \u547d\u4ee4\u67e5\u770b # -n: Numeric output. IP addresses and port numbers will be printed in numeric format. By default, the program # will try to display them as host names, network names, or services (whenever applicable). # -L: List all chains. iptables -nL # \u9650\u5236\u4ece 192.168.56.10 \u6765\u7684\u6240\u6709\u8bf7\u6c42 # -t: specific which table # -I: insert rule into the selected chain # -s: source ip # -j: target(ACCEPT, DROP, REJECT) # \u9ed8\u8ba4\u4f1a\u52a0\u5230\u5f53\u524d chain \u7684\u7b2c\u4e00\u4e2a iptables -t filter -I INPUT -s 192.168.56.10 -j DROP # -D: delete one or more rule from the selected chain iptables -t filter -D INPUT 1 # \u9650\u5236\u4ece 192.168.56.10 \u8bbf\u95ee 80 \u7aef\u53e3 # -p: protocol, The specified protocol can be one of tcp, udp, udplite, icmp, icmpv6,esp, ah, sctp, mh or the # special keyword \"all\". # --dport: destination port. iptables -t filter -I INPUT -s 192.168.56.10 -j DROP -p tcp --dport 80 # \u591a\u4e2a\u7aef\u53e3 iptables -t filter -I INPUT -s 192.168.56.10 -j DROP -p tcp -m mutiport --dport 80,443 # \u8fde\u7eed\u7684\u7aef\u53e3\u8303\u56f4: 1 - 1024 iptables -t filter -I INPUT -s 192.168.56.10 -j DROP -p tcp--dport 1:1024","title":"iptables 4\u8868\u4e94\u94fe"},{"location":"iptables/0-%E8%AE%A4%E8%AF%86%20iptables/#linux","text":"Linux \u5185\u6838\u53c2\u6570\u914d\u7f6e\u6587\u4ef6\u5728 /etc/sysctl.conf \uff0c\u6bcf\u6b21\u4fee\u6539\u4e4b\u540e\uff0c\u9700\u8981\u8fd0\u884c sysctl -p \u751f\u6548 \u4e34\u65f6\u4fee\u6539\u5185\u6838\u53c2\u6570\uff0c\u6240\u6709\u7684\u53c2\u6570\u90fd\u662f\u4e00\u4e2a\u6587\u4ef6\uff0c\u5728 /proc/sys/ \u6587\u4ef6\u5939\u4e2d\uff0c\u4f8b\u5982 net.ipv4.icmp_echo_ignore_all \u914d\u7f6e\u6240\u5bf9\u5e94\u7684\u6587\u4ef6\u662f\uff1a /proc/sys/net/ipv4/icmp_echo_ignore_all \u67e5\u770b\u6240\u6709\u5185\u6838\u53c2\u6570: sysctl -a","title":"Linux \u5185\u6838\u53c2\u6570"},{"location":"kubernetes/auth/0-kube-rbac-proxy/","text":"kube-rbac-proxy \u4eca\u5929\u5728\u8fc7 OTEL-operator \u7684\u65f6\u5019\u53d1\u73b0\uff0cOTEL-operator \u4f7f\u7528\u4e86\u4e00\u4e2a\u540d\u4e3a\uff1a kube-rbac-proxy \u7684 sidecar. \u4e8e\u662f\u82b1\u65f6\u95f4\u4e86\u89e3\u4e00\u4e0b\u4ec0\u4e48\u662f kube-rbac-proxy. \ud83e\udd73 \u3002 print(\"Hello, MkDocs!\") ## Introduction kube-rbac-proxy \u662f\u4e00\u4e2a\u57fa\u4e8e K8S RBAC \u6765\u505a auth \u5e76\u4e14\u9632\u62a4\u540e\u9762\u4ee3\u7406\u7684\u670d\u52a1\uff0c\u6682\u65f6\u8fd8\u5904\u4e8e v0 \u9636\u6bb5\uff0c\u8fd8\u6ca1\u6709\u6b63\u5f0f release \u53ea\u4e0d\u8fc7\u53ef\u4ee5\u6d45\u5c1d\u4e00\u4e0b\u3002OTEL-operator \u53ef\u4ee5\u901a\u8fc7 enable kube-rbac-proxy \u6765\u5bf9 `/metrics` \u63a5\u53e3\u505a auth\uff0c\u4ee5\u4fbf\u4e8e\u53ea\u5141\u8bb8 prometheus \u5e26\u7740\u56fa\u5b9a\u7684 service-account token \u624d\u53ef\u4ee5\u8bbf\u95ee\u3002 ## Precondition \u5728\u4ecb\u7ecd kube-rbac-proxy \u4e4b\u524d\uff0c\u9700\u8981\u63d0\u4e00\u4e0b `kubectl auth can-i` \u8fd9\u4e2a\u547d\u4ee4\u3002\u8fd9\u4e2a\u547d\u4ee4\u4e3b\u8981\u662f\u7528\u6765\u67e5\u770b\u5f53\u524d\u7528\u6237\u5bf9\u4e8e\u5f53\u524d cluster (kube-config) \u7684\u8d44\u6e90\u90fd\u6709\u4ec0\u4e48\u6743\u9650 Resources Non-Resource URLs Resource Names Verbs pods/exec [] [] [ ] pods/portforward [] [] [ ] pods/eviction [] [] [create] selfsubjectreviews.authentication.k8s.io [] [] [create] selfsubjectaccessreviews.authorization.k8s.io [] [] [create] selfsubjectrulesreviews.authorization.k8s.io [] [] [create] ... \u7c7b\u4f3c\u4e8e\u8fd9\u79cd\u8f93\u51fa\uff0c\u53ef\u4ee5\u5f88\u76f4\u89c2\u7684\u770b\u5230 resource \u4e0e verb \u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u90a3\u4e48 k8s \u662f\u600e\u4e48\u5b9e\u73b0\u8fd9\u5957\u673a\u5236\u7684\u5462\uff1f\u5728 k8s \u5b98\u65b9\u6587\u6863\u4e2d\u6709\u4e00\u7ae0\u8282\u8bb2 [Checking API access](https://kubernetes.io/docs/reference/access-authn-authz/authorization/#checking-api-access) \u63d0\u5230\uff1a\u53ef\u4ee5\u4f7f\u7528 SelfSubjectAccessReview \u6765\u68c0\u67e5\u5f53\u524d\u7528\u6237\u5bf9\u4e8e\u54ea\u4e9b\u8d44\u6e90\u7684\u6743\u9650\u3002 > SelfSubjectAccessReview is part of the authorization.k8s.io API group, which exposes the API server authorization to external services. Other resources in this group include: > > **SubjectAccessReview** > Access review for any user, not only the current one. Useful for delegating authorization decisions to the API server. For example, the kubelet and extension API servers use this to determine user access to their own APIs. > **LocalSubjectAccessReview** > Like SubjectAccessReview but restricted to a specific namespace. > **SelfSubjectRulesReview** > A review which returns the set of actions a user can perform within a namespace. Useful for users to quickly summarize their own access, or for UIs to hide/show actions. \u6211\u672c\u5730\u96c6\u7fa4\u4f7f\u7528 [orbstack](https://orbstack.dev/) \u542f\u52a8\u7684\uff0c\u53ef\u4ee5\u4f7f\u7528 `SubjectAccessReview` \u6765\u68c0\u67e5 `system:kube-scheduler` \u5bf9\u4e8e default namesapce \u4e0b\u7684 pod \u6709\u6ca1\u6709 Get \u6743\u9650 ```shell create -f - -o yaml << EOF apiVersion: authorization.k8s.io/v1 kind: SubjectAccessReview spec: user: \"system:kube-scheduler\" resourceAttributes: namespace: \"default\" verb: \"get\" resource: \"pods\" EOF # Output apiVersion: authorization.k8s.io/v1 kind: SubjectAccessReview metadata: creationTimestamp: null spec: resourceAttributes: namespace: default resource: pods verb: get user: system:kube-scheduler status: allowed: true reason: 'RBAC: allowed by ClusterRoleBinding \"system:kube-scheduler\" of ClusterRole \"system:kube-scheduler\" to User \"system:kube-scheduler\"' How \u6709\u4e86 SubjectAccessReview \u5c31\u53ef\u4ee5\u9a8c\u8bc1\u5f53\u524d\u7528\u6237\u6743\u9650\uff0c\u4f46\u662f\u76ee\u524d\u6765\u770b\u90fd\u662f\u5bf9\u4e8e K8S \u5185\u7f6e\u7684\u8d44\u6e90\uff0c\u4f46\u662f\u50cf OTEL-operator \u5b9e\u9645\u4e0a\u662f\u5bf9 /metrics \u63a5\u53e3\u505a auth\uff0c\u5728 K8S \u4e2d\u600e\u4e48\u5b9e\u73b0\u5462\uff1f K8S \u5df2\u7ecf\u5b9e\u73b0\u53ef\u4ee5\u5bf9 ClusterRole \u6dfb\u52a0 nonResourceURLs \u5b57\u6bb5\uff0c\u4ee5\u4fbf\u4e8e\u7ed9 ClusterRole \u5bf9\u5e94\u63a5\u53e3\u7684\u6743\u9650\uff0c\u57fa\u4e8e\u4e0a\u8ff0 /metrics \u63a5\u53e3\u7684 ClusterRole yaml: apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRole metadata: name: allow-access-otel-operator rules: - nonResourceURLs: [\"/metrics\"] verbs: [\"get\"] \u518d\u628a allow-access-otel-operator ClusterRole \u7ed1\u5b9a\u5230 ServiceAccount \u4e0a\u4ee5\u540e\uff0cpod \u5728\u4f7f\u7528 ServiceAccount \u4f1a\u81ea\u52a8\u5728 /var/run/secrets/kubernetes.io/serviceaccount \u6302\u8f7d ServiceAccount token\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728\u8bf7\u6c42\u63a5\u53e3\u7684\u65f6\u5019\u5e26\u7740\uff1a Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token) header \u8fd9\u6837 auth \u8bf7\u6c42\u5c31\u80fd\u901a\u8fc7\u3002 Example kube-rbac-proxy -> nginx deployment yaml apiVersion: apps/v1 kind: Deployment metadata: name: nginx-deployment labels: app: nginx spec: replicas: 1 selector: matchLabels: app: nginx template: metadata: labels: app: nginx spec: serviceAccountName: nginx-service-account containers: - name: nginx image: nginx:mainline-alpine3.22 imagePullPolicy: IfNotPresent ports: - containerPort: 80 - name: kube-rbac-proxy args: - --secure-listen-address=0.0.0.0:8443 - --upstream=http://127.0.0.1:80/ - --v=0 image: quay.io/brancz/kube-rbac-proxy:v0.19.1 imagePullPolicy: IfNotPresent ports: - containerPort: 8443 name: https protocol: TCP --- apiVersion: v1 kind: Service metadata: name: nginx-service labels: app: nginx spec: type: ClusterIP ports: - name: https port: 8443 targetPort: https protocol: TCP selector: app: nginx --- apiVersion: v1 kind: ServiceAccount metadata: name: nginx-service-account --- apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRole metadata: name: nginx-rbac-proxy-role rules: # kube-rbac-proxy \u9700\u8981\u8fd9\u4e9b\u6743\u9650\u505a\u8ba4\u8bc1 - apiGroups: [\"authentication.k8s.io\"] resources: [\"tokenreviews\"] verbs: [\"create\"] - apiGroups: [\"authorization.k8s.io\"] resources: [\"subjectaccessreviews\"] verbs: [\"create\"] --- apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRoleBinding metadata: name: nginx-rbac-proxy-binding subjects: - kind: ServiceAccount name: nginx-service-account namespace: default roleRef: kind: ClusterRole name: nginx-rbac-proxy-role apiGroup: rbac.authorization.k8s.io another pod to access kube-rbac-proxy apiVersion: v1 kind: Pod metadata: name: curl spec: serviceAccountName: test-service-account containers: - name: curl image: alpine/curl:8.14.1 command: [\"sleep\", \"3600\"] ports: - containerPort: 80 --- apiVersion: v1 kind: ServiceAccount metadata: name: test-service-account --- apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRole metadata: name: nginx-pod-reader rules: - nonResourceURLs: [\"/\"] verbs: [\"get\"] --- apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRoleBinding metadata: name: nginx-pod-reader-binding labels: app: test subjects: - kind: ServiceAccount name: test-service-account namespace: default roleRef: kind: ClusterRole name: nginx-pod-reader apiGroup: rbac.authorization.k8s.io \u6d4b\u8bd5\uff1a kubectl exec -it pods/test-pod -- sh # \u4f1a\u8fd4\u56de nginx \u9996\u9875 curl -H 'Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)' https://nginx-service:8443/ -k","title":"kube-rbac-proxy"},{"location":"kubernetes/auth/0-kube-rbac-proxy/#kube-rbac-proxy","text":"\u4eca\u5929\u5728\u8fc7 OTEL-operator \u7684\u65f6\u5019\u53d1\u73b0\uff0cOTEL-operator \u4f7f\u7528\u4e86\u4e00\u4e2a\u540d\u4e3a\uff1a kube-rbac-proxy \u7684 sidecar. \u4e8e\u662f\u82b1\u65f6\u95f4\u4e86\u89e3\u4e00\u4e0b\u4ec0\u4e48\u662f kube-rbac-proxy. \ud83e\udd73 \u3002 print(\"Hello, MkDocs!\") ## Introduction kube-rbac-proxy \u662f\u4e00\u4e2a\u57fa\u4e8e K8S RBAC \u6765\u505a auth \u5e76\u4e14\u9632\u62a4\u540e\u9762\u4ee3\u7406\u7684\u670d\u52a1\uff0c\u6682\u65f6\u8fd8\u5904\u4e8e v0 \u9636\u6bb5\uff0c\u8fd8\u6ca1\u6709\u6b63\u5f0f release \u53ea\u4e0d\u8fc7\u53ef\u4ee5\u6d45\u5c1d\u4e00\u4e0b\u3002OTEL-operator \u53ef\u4ee5\u901a\u8fc7 enable kube-rbac-proxy \u6765\u5bf9 `/metrics` \u63a5\u53e3\u505a auth\uff0c\u4ee5\u4fbf\u4e8e\u53ea\u5141\u8bb8 prometheus \u5e26\u7740\u56fa\u5b9a\u7684 service-account token \u624d\u53ef\u4ee5\u8bbf\u95ee\u3002 ## Precondition \u5728\u4ecb\u7ecd kube-rbac-proxy \u4e4b\u524d\uff0c\u9700\u8981\u63d0\u4e00\u4e0b `kubectl auth can-i` \u8fd9\u4e2a\u547d\u4ee4\u3002\u8fd9\u4e2a\u547d\u4ee4\u4e3b\u8981\u662f\u7528\u6765\u67e5\u770b\u5f53\u524d\u7528\u6237\u5bf9\u4e8e\u5f53\u524d cluster (kube-config) \u7684\u8d44\u6e90\u90fd\u6709\u4ec0\u4e48\u6743\u9650 Resources Non-Resource URLs Resource Names Verbs pods/exec [] [] [ ] pods/portforward [] [] [ ] pods/eviction [] [] [create] selfsubjectreviews.authentication.k8s.io [] [] [create] selfsubjectaccessreviews.authorization.k8s.io [] [] [create] selfsubjectrulesreviews.authorization.k8s.io [] [] [create] ... \u7c7b\u4f3c\u4e8e\u8fd9\u79cd\u8f93\u51fa\uff0c\u53ef\u4ee5\u5f88\u76f4\u89c2\u7684\u770b\u5230 resource \u4e0e verb \u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u90a3\u4e48 k8s \u662f\u600e\u4e48\u5b9e\u73b0\u8fd9\u5957\u673a\u5236\u7684\u5462\uff1f\u5728 k8s \u5b98\u65b9\u6587\u6863\u4e2d\u6709\u4e00\u7ae0\u8282\u8bb2 [Checking API access](https://kubernetes.io/docs/reference/access-authn-authz/authorization/#checking-api-access) \u63d0\u5230\uff1a\u53ef\u4ee5\u4f7f\u7528 SelfSubjectAccessReview \u6765\u68c0\u67e5\u5f53\u524d\u7528\u6237\u5bf9\u4e8e\u54ea\u4e9b\u8d44\u6e90\u7684\u6743\u9650\u3002 > SelfSubjectAccessReview is part of the authorization.k8s.io API group, which exposes the API server authorization to external services. Other resources in this group include: > > **SubjectAccessReview** > Access review for any user, not only the current one. Useful for delegating authorization decisions to the API server. For example, the kubelet and extension API servers use this to determine user access to their own APIs. > **LocalSubjectAccessReview** > Like SubjectAccessReview but restricted to a specific namespace. > **SelfSubjectRulesReview** > A review which returns the set of actions a user can perform within a namespace. Useful for users to quickly summarize their own access, or for UIs to hide/show actions. \u6211\u672c\u5730\u96c6\u7fa4\u4f7f\u7528 [orbstack](https://orbstack.dev/) \u542f\u52a8\u7684\uff0c\u53ef\u4ee5\u4f7f\u7528 `SubjectAccessReview` \u6765\u68c0\u67e5 `system:kube-scheduler` \u5bf9\u4e8e default namesapce \u4e0b\u7684 pod \u6709\u6ca1\u6709 Get \u6743\u9650 ```shell create -f - -o yaml << EOF apiVersion: authorization.k8s.io/v1 kind: SubjectAccessReview spec: user: \"system:kube-scheduler\" resourceAttributes: namespace: \"default\" verb: \"get\" resource: \"pods\" EOF # Output apiVersion: authorization.k8s.io/v1 kind: SubjectAccessReview metadata: creationTimestamp: null spec: resourceAttributes: namespace: default resource: pods verb: get user: system:kube-scheduler status: allowed: true reason: 'RBAC: allowed by ClusterRoleBinding \"system:kube-scheduler\" of ClusterRole \"system:kube-scheduler\" to User \"system:kube-scheduler\"'","title":"kube-rbac-proxy"},{"location":"kubernetes/auth/0-kube-rbac-proxy/#how","text":"\u6709\u4e86 SubjectAccessReview \u5c31\u53ef\u4ee5\u9a8c\u8bc1\u5f53\u524d\u7528\u6237\u6743\u9650\uff0c\u4f46\u662f\u76ee\u524d\u6765\u770b\u90fd\u662f\u5bf9\u4e8e K8S \u5185\u7f6e\u7684\u8d44\u6e90\uff0c\u4f46\u662f\u50cf OTEL-operator \u5b9e\u9645\u4e0a\u662f\u5bf9 /metrics \u63a5\u53e3\u505a auth\uff0c\u5728 K8S \u4e2d\u600e\u4e48\u5b9e\u73b0\u5462\uff1f K8S \u5df2\u7ecf\u5b9e\u73b0\u53ef\u4ee5\u5bf9 ClusterRole \u6dfb\u52a0 nonResourceURLs \u5b57\u6bb5\uff0c\u4ee5\u4fbf\u4e8e\u7ed9 ClusterRole \u5bf9\u5e94\u63a5\u53e3\u7684\u6743\u9650\uff0c\u57fa\u4e8e\u4e0a\u8ff0 /metrics \u63a5\u53e3\u7684 ClusterRole yaml: apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRole metadata: name: allow-access-otel-operator rules: - nonResourceURLs: [\"/metrics\"] verbs: [\"get\"] \u518d\u628a allow-access-otel-operator ClusterRole \u7ed1\u5b9a\u5230 ServiceAccount \u4e0a\u4ee5\u540e\uff0cpod \u5728\u4f7f\u7528 ServiceAccount \u4f1a\u81ea\u52a8\u5728 /var/run/secrets/kubernetes.io/serviceaccount \u6302\u8f7d ServiceAccount token\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728\u8bf7\u6c42\u63a5\u53e3\u7684\u65f6\u5019\u5e26\u7740\uff1a Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token) header \u8fd9\u6837 auth \u8bf7\u6c42\u5c31\u80fd\u901a\u8fc7\u3002","title":"How"},{"location":"kubernetes/auth/0-kube-rbac-proxy/#example","text":"kube-rbac-proxy -> nginx deployment yaml apiVersion: apps/v1 kind: Deployment metadata: name: nginx-deployment labels: app: nginx spec: replicas: 1 selector: matchLabels: app: nginx template: metadata: labels: app: nginx spec: serviceAccountName: nginx-service-account containers: - name: nginx image: nginx:mainline-alpine3.22 imagePullPolicy: IfNotPresent ports: - containerPort: 80 - name: kube-rbac-proxy args: - --secure-listen-address=0.0.0.0:8443 - --upstream=http://127.0.0.1:80/ - --v=0 image: quay.io/brancz/kube-rbac-proxy:v0.19.1 imagePullPolicy: IfNotPresent ports: - containerPort: 8443 name: https protocol: TCP --- apiVersion: v1 kind: Service metadata: name: nginx-service labels: app: nginx spec: type: ClusterIP ports: - name: https port: 8443 targetPort: https protocol: TCP selector: app: nginx --- apiVersion: v1 kind: ServiceAccount metadata: name: nginx-service-account --- apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRole metadata: name: nginx-rbac-proxy-role rules: # kube-rbac-proxy \u9700\u8981\u8fd9\u4e9b\u6743\u9650\u505a\u8ba4\u8bc1 - apiGroups: [\"authentication.k8s.io\"] resources: [\"tokenreviews\"] verbs: [\"create\"] - apiGroups: [\"authorization.k8s.io\"] resources: [\"subjectaccessreviews\"] verbs: [\"create\"] --- apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRoleBinding metadata: name: nginx-rbac-proxy-binding subjects: - kind: ServiceAccount name: nginx-service-account namespace: default roleRef: kind: ClusterRole name: nginx-rbac-proxy-role apiGroup: rbac.authorization.k8s.io another pod to access kube-rbac-proxy apiVersion: v1 kind: Pod metadata: name: curl spec: serviceAccountName: test-service-account containers: - name: curl image: alpine/curl:8.14.1 command: [\"sleep\", \"3600\"] ports: - containerPort: 80 --- apiVersion: v1 kind: ServiceAccount metadata: name: test-service-account --- apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRole metadata: name: nginx-pod-reader rules: - nonResourceURLs: [\"/\"] verbs: [\"get\"] --- apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRoleBinding metadata: name: nginx-pod-reader-binding labels: app: test subjects: - kind: ServiceAccount name: test-service-account namespace: default roleRef: kind: ClusterRole name: nginx-pod-reader apiGroup: rbac.authorization.k8s.io \u6d4b\u8bd5\uff1a kubectl exec -it pods/test-pod -- sh # \u4f1a\u8fd4\u56de nginx \u9996\u9875 curl -H 'Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)' https://nginx-service:8443/ -k","title":"Example"},{"location":"kubernetes/cni/0-%E8%AE%A4%E8%AF%86%20cni/","text":"\u8ba4\u8bc6 kubernetes CNI \u5728\u4f7f\u7528 kubeadm init \u521d\u59cb\u5316\u5b8c\u96c6\u7fa4\u4e4b\u540e\uff0c\u8fd0\u884c kubectl get node node \u7684\u72b6\u6001\u90fd\u662f NotReady NAME STATUS ROLES AGE VERSION master NotReady control-plane 6d11h v1.29.0 worker NotReady <none> 6d11h v1.29.0 \u8fd9\u662f\u56e0\u4e3a\u5f53\u524d\u96c6\u7fa4\u4e4b\u5185\u5e76\u6ca1\u6709\u4e00\u4e2a cni \u63d2\u4ef6\uff0c\u5bfc\u81f4 kubernetes \u5e76\u4e0d\u77e5\u9053\u5982\u4f55\u7ed9 pod \u5206\u914d ip\uff0c\u6240\u4ee5\u96c6\u7fa4\u4e2d\u7684 node \u72b6\u6001\u5c31\u662f NotReady \u4e86\u3002 \u4ec0\u4e48\u662f CNI \u5462\uff1f CNI \u7684\u5168\u79f0\u662f Container Network Interface\uff0c\u5b83\u4e3a\u5bb9\u5668\u63d0\u4f9b\u4e86\u4e00\u79cd\u57fa\u4e8e\u63d2\u4ef6\u7ed3\u6784\u7684\u6807\u51c6\u5316\u7f51\u7edc\u89e3\u51b3\u65b9\u6848\u3002\u4ee5\u5f80\uff0c\u5bb9\u5668\u7684\u7f51\u7edc\u5c42\u662f\u548c\u5177\u4f53\u7684\u5e95\u5c42\u7f51\u7edc\u73af\u5883\u9ad8\u5ea6\u76f8\u5173\u7684\uff0c\u4e0d\u540c\u7684\u7f51\u7edc\u670d\u52a1\u63d0\u4f9b\u5546\u6709\u4e0d\u540c\u7684\u5b9e\u73b0\u3002CNI \u4ece\u7f51\u7edc\u670d\u52a1\u91cc\u62bd\u8c61\u51fa\u4e86\u4e00\u5957\u6807\u51c6\u63a5\u53e3\uff0c\u4ece\u800c\u5c4f\u853d\u4e86\u4e0a\u5c42\u7f51\u7edc\u548c\u5e95\u5c42\u7f51\u7edc\u63d0\u4f9b\u5546\u7684\u7f51\u7edc\u5b9e\u73b0\u4e4b\u95f4\u7684\u5dee\u5f02\u3002\u5e76\u4e14\uff0c\u901a\u8fc7\u63d2\u4ef6\u7ed3\u6784\uff0c\u5b83\u8ba9\u5bb9\u5668\u5728\u7f51\u7edc\u5c42\u7684\u5177\u4f53\u5b9e\u73b0\u53d8\u5f97\u53ef\u63d2\u62d4\u4e86\uff0c\u6240\u4ee5\u975e\u5e38\u7075\u6d3b\u3002 CNI \u96b6\u5c5e\u4e8e CNCF( Cloud Native Computing Foundation )\uff0cGithub: cni \u5728 plugin \u4ee3\u7801\u5e93\u4e2d\uff0c\u6709\u5f88\u591a example \u4f5c\u4e3a\u53c2\u8003\u3002 \u63a5\u4e0b\u6765\u51c6\u5907\u4f7f\u7528 CNI plugin \u4e2d\u7684 bridge \u505a\u5b9e\u73b0\u3002 Go Go \u6309\u987a\u5e8f\u8fd0\u884c\u4e0b\u9762\u547d\u4ee4(\u6211\u8fd9\u91cc\u4f7f\u7528\u7684\u662f aws arm64 \u7684 vm\uff0c\u4ee5\u53ca 1.4.0 \u7684 cni plugin) ip netns add lab-ns # \u521b\u5efa\u4e00\u4e2a network namespace \u4ee5\u4fbf\u4e8e\u540e\u9762 cni \u5728\u8fd0\u884c\u7684\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u8fd9\u4e2a network namespace cd ~ mkdir -p test-cni/plugins cd test-cni/plugins curl -OL https://github.com/containernetworking/plugins/releases/download/v1.4.0/cni-plugins-linux-arm64-v1.4.0.tgz tar -zxf cni-plugins-linux-arm64-v1.4.0.tgz cat > lab-br0.conf <<\"EOF\" # \u914d\u7f6e\u8be6\u60c5\uff1ahttps://github.com/containernetworking/cni/blob/main/SPEC.md#section-1-network-configuration-format { \"cniVersion\": \"1.0.0\", \"name\": \"lab-br0\", \"type\": \"bridge\", \"bridge\": \"lab-br0\", \"isGateway\": true, \"ipMasq\": true, \"ipam\": { \"type\": \"host-local\", \"subnet\": \"10.1.0.0/16\", \"gateway\": \"10.1.0.1\", \"routes\": [ { \"dst\": \"0.0.0.0/0\" } ] } } EOF cniVersion: \u6765\u81ea\u4e8e github \u73b0\u5728\u652f\u6301\u7684 cni \u7248\u672c name: \u5728\u4e00\u53f0\u673a\u5668\u4e0a\uff0c\u8fd9\u4e2a name \u9700\u8981\u552f\u4e00 type: \u4f7f\u7528\u5728\u5f53\u524d\u78c1\u76d8\u4e0a\u7684\u90a3\u4e00\u4e2a cni plugin bridge: \u7f51\u6865\u7684\u540d\u5b57 isGateway: \u53ea\u6709\u8bbe\u7f6e\u4e3a true \u624d\u4f1a\u7ed9\u521b\u5efa\u51fa\u6765\u7684\u7f51\u6865\u8bbe\u7f6e ip ipMasq: \u5728\u63d2\u4ef6\u652f\u6301\u7684\u60c5\u51b5\u7684\uff0c\u8bbe\u7f6eip\u4f2a\u88c5\u3002\u5f53\u5bbf\u4e3b\u673a\u5145\u5f53\u7684\u7f51\u5173\u65e0\u6cd5\u8def\u7531\u5230\u5206\u914d\u7ed9\u5bb9\u5668\u7684IP\u5b50\u7f51\u7684\u7f51\u5173\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u53c2\u6570\u662f\u5fc5\u987b\u6709\u7684\u3002(\u522b\u7684\u5730\u65b9\u6284\u8fc7\u6765\u7684) ipam: ip address management \u4e0d\u540c cni plugin \u5e94\u8be5\u6709\u4e0d\u540c\u7684 key value type: \u4f7f\u7528\u5728\u5f53\u524d\u78c1\u76d8\u4e0a\u7684\u90a3\u4e00\u4e2a cni plugin subnet: \u7ed9 container \u7684 subnet address gateway: gateway \u5730\u5740 routes: \u5728\u521b\u5efa\u51fa\u6765\u7684 network namespace \u4e2d\u8bbe\u7f6e\u7684 route table # \u6240\u6709\u7684\u53c2\u6570\u89e3\u91ca\uff1ahttps://github.com/containernetworking/cni/blob/main/SPEC.md#parameters CNI_COMMAND=ADD CNI_CONTAINERID=lab-ns CNI_NETNS=/var/run/netns/lab-ns CNI_IFNAME=eth0 CNI_PATH=`pwd` ./bridge <./lab-br0.conf # \u8fd9\u4e2a\u547d\u4ee4\u4f1a\u8f93\u51fa\uff1a # { # \"cniVersion\": \"1.0.0\", # \"interfaces\": [ # { # \"name\": \"lab-br0\", # \"mac\": \"c6:5e:52:2b:67:8d\" # }, # { # \"name\": \"veth7e65c23d\", # \"mac\": \"d6:03:a5:19:9e:2b\" # }, # { # \"name\": \"eth0\", # \"mac\": \"06:04:03:ac:ac:9c\", # \"sandbox\": \"/var/run/netns/lab-ns\" # } # ], # \"ips\": [ # { # \"interface\": 2, # \"address\": \"10.1.0.2/16\", # \"gateway\": \"10.1.0.1\" # } # ], # \"routes\": [ # { # \"dst\": \"0.0.0.0/0\" # } # ], # \"dns\": {} verify \u9a8c\u8bc1 vm interface ip a s \u00b7\u00b7\u00b7 # \u8fd9\u91cc lab-br0 \u5c31\u662f\u521a\u521a bridge cni \u521b\u5efa\u7684\u7f51\u6865 # veth7e65c23d \u662f veth \u5176\u4e2d\u4e00\u8fb9 8: lab-br0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default qlen 1000 link/ether c6:5e:52:2b:67:8d brd ff:ff:ff:ff:ff:ff inet6 fe80::c45e:52ff:fe2b:678d/64 scope link valid_lft forever preferred_lft forever 9: veth7e65c23d@if2: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue master lab-br0 state UP group default link/ether d6:03:a5:19:9e:2b brd ff:ff:ff:ff:ff:ff link-netns lab-ns inet6 fe80::d403:a5ff:fe19:9e2b/64 scope link valid_lft forever preferred_lft forever # \u53e6\u4e00\u8fb9\u5728 network namespace \u91cc ip netns exec lab-ns ip a s # \u5728 lab-ns \u8fd9\u4e2a network namespace \u4e2d\u53ea\u6709\u4e00\u5757\u7f51\u5361\uff0c\u7f51\u5361\u540d\u5b57\u662f\u4ece\uff1aCNI_IFNAME \u6765\u7684 1: lo: <LOOPBACK> mtu 65536 qdisc noop state DOWN group default qlen 1000 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 2: eth0@if9: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default link/ether 06:04:03:ac:ac:9c brd ff:ff:ff:ff:ff:ff link-netnsid 0 inet 10.1.0.2/16 brd 10.1.255.255 scope global eth0 valid_lft forever preferred_lft forever inet6 fe80::404:3ff:feac:ac9c/64 scope link valid_lft forever preferred_lft forever # \u5728 network namespace \u4e2d\u9a8c\u8bc1\u53ef\u4ee5\u8bbf\u95ee network gateway ip netns exec lab-ns ping 10.1.0.1 -c 3 # \u5728 network namespace \u4e2d\u9a8c\u8bc1\u53ef\u4ee5\u8bbf\u95ee\u81ea\u5df1 ip netns exec lab-ns ping 10.1.0.2 -c 3 teardown export NS_NAME=\"lab-ns\" export BR_NAME=\"lab-br0\" # \u5220\u9664\u6d4b\u8bd5\u521b\u5efa\u7684 network namespace ip -all netns delete lab-ns # \u5220\u9664 host-local \u521b\u5efa\u7684 network bridge # \u5728\u5220\u9664 bridge \u524d\uff0c\u5fc5\u987b\u5148\u628a bridge \u505c\u6389 ip link set lab-br0 down brctl delbr lab-br0 # \u5220\u9664 cni \u7528\u6765\u5b58\u50a8 metadata \u7684\u6570\u636e rm -rf /var/lib/cni/networks/lab-br0/","title":"\u8ba4\u8bc6 kubernetes CNI"},{"location":"kubernetes/cni/0-%E8%AE%A4%E8%AF%86%20cni/#kubernetes-cni","text":"\u5728\u4f7f\u7528 kubeadm init \u521d\u59cb\u5316\u5b8c\u96c6\u7fa4\u4e4b\u540e\uff0c\u8fd0\u884c kubectl get node node \u7684\u72b6\u6001\u90fd\u662f NotReady NAME STATUS ROLES AGE VERSION master NotReady control-plane 6d11h v1.29.0 worker NotReady <none> 6d11h v1.29.0 \u8fd9\u662f\u56e0\u4e3a\u5f53\u524d\u96c6\u7fa4\u4e4b\u5185\u5e76\u6ca1\u6709\u4e00\u4e2a cni \u63d2\u4ef6\uff0c\u5bfc\u81f4 kubernetes \u5e76\u4e0d\u77e5\u9053\u5982\u4f55\u7ed9 pod \u5206\u914d ip\uff0c\u6240\u4ee5\u96c6\u7fa4\u4e2d\u7684 node \u72b6\u6001\u5c31\u662f NotReady \u4e86\u3002","title":"\u8ba4\u8bc6 kubernetes CNI"},{"location":"kubernetes/cni/0-%E8%AE%A4%E8%AF%86%20cni/#cni","text":"CNI \u7684\u5168\u79f0\u662f Container Network Interface\uff0c\u5b83\u4e3a\u5bb9\u5668\u63d0\u4f9b\u4e86\u4e00\u79cd\u57fa\u4e8e\u63d2\u4ef6\u7ed3\u6784\u7684\u6807\u51c6\u5316\u7f51\u7edc\u89e3\u51b3\u65b9\u6848\u3002\u4ee5\u5f80\uff0c\u5bb9\u5668\u7684\u7f51\u7edc\u5c42\u662f\u548c\u5177\u4f53\u7684\u5e95\u5c42\u7f51\u7edc\u73af\u5883\u9ad8\u5ea6\u76f8\u5173\u7684\uff0c\u4e0d\u540c\u7684\u7f51\u7edc\u670d\u52a1\u63d0\u4f9b\u5546\u6709\u4e0d\u540c\u7684\u5b9e\u73b0\u3002CNI \u4ece\u7f51\u7edc\u670d\u52a1\u91cc\u62bd\u8c61\u51fa\u4e86\u4e00\u5957\u6807\u51c6\u63a5\u53e3\uff0c\u4ece\u800c\u5c4f\u853d\u4e86\u4e0a\u5c42\u7f51\u7edc\u548c\u5e95\u5c42\u7f51\u7edc\u63d0\u4f9b\u5546\u7684\u7f51\u7edc\u5b9e\u73b0\u4e4b\u95f4\u7684\u5dee\u5f02\u3002\u5e76\u4e14\uff0c\u901a\u8fc7\u63d2\u4ef6\u7ed3\u6784\uff0c\u5b83\u8ba9\u5bb9\u5668\u5728\u7f51\u7edc\u5c42\u7684\u5177\u4f53\u5b9e\u73b0\u53d8\u5f97\u53ef\u63d2\u62d4\u4e86\uff0c\u6240\u4ee5\u975e\u5e38\u7075\u6d3b\u3002 CNI \u96b6\u5c5e\u4e8e CNCF( Cloud Native Computing Foundation )\uff0cGithub: cni \u5728 plugin \u4ee3\u7801\u5e93\u4e2d\uff0c\u6709\u5f88\u591a example \u4f5c\u4e3a\u53c2\u8003\u3002 \u63a5\u4e0b\u6765\u51c6\u5907\u4f7f\u7528 CNI plugin \u4e2d\u7684 bridge \u505a\u5b9e\u73b0\u3002","title":"\u4ec0\u4e48\u662f CNI \u5462\uff1f"},{"location":"kubernetes/cni/0-%E8%AE%A4%E8%AF%86%20cni/#go-go","text":"\u6309\u987a\u5e8f\u8fd0\u884c\u4e0b\u9762\u547d\u4ee4(\u6211\u8fd9\u91cc\u4f7f\u7528\u7684\u662f aws arm64 \u7684 vm\uff0c\u4ee5\u53ca 1.4.0 \u7684 cni plugin) ip netns add lab-ns # \u521b\u5efa\u4e00\u4e2a network namespace \u4ee5\u4fbf\u4e8e\u540e\u9762 cni \u5728\u8fd0\u884c\u7684\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u8fd9\u4e2a network namespace cd ~ mkdir -p test-cni/plugins cd test-cni/plugins curl -OL https://github.com/containernetworking/plugins/releases/download/v1.4.0/cni-plugins-linux-arm64-v1.4.0.tgz tar -zxf cni-plugins-linux-arm64-v1.4.0.tgz cat > lab-br0.conf <<\"EOF\" # \u914d\u7f6e\u8be6\u60c5\uff1ahttps://github.com/containernetworking/cni/blob/main/SPEC.md#section-1-network-configuration-format { \"cniVersion\": \"1.0.0\", \"name\": \"lab-br0\", \"type\": \"bridge\", \"bridge\": \"lab-br0\", \"isGateway\": true, \"ipMasq\": true, \"ipam\": { \"type\": \"host-local\", \"subnet\": \"10.1.0.0/16\", \"gateway\": \"10.1.0.1\", \"routes\": [ { \"dst\": \"0.0.0.0/0\" } ] } } EOF cniVersion: \u6765\u81ea\u4e8e github \u73b0\u5728\u652f\u6301\u7684 cni \u7248\u672c name: \u5728\u4e00\u53f0\u673a\u5668\u4e0a\uff0c\u8fd9\u4e2a name \u9700\u8981\u552f\u4e00 type: \u4f7f\u7528\u5728\u5f53\u524d\u78c1\u76d8\u4e0a\u7684\u90a3\u4e00\u4e2a cni plugin bridge: \u7f51\u6865\u7684\u540d\u5b57 isGateway: \u53ea\u6709\u8bbe\u7f6e\u4e3a true \u624d\u4f1a\u7ed9\u521b\u5efa\u51fa\u6765\u7684\u7f51\u6865\u8bbe\u7f6e ip ipMasq: \u5728\u63d2\u4ef6\u652f\u6301\u7684\u60c5\u51b5\u7684\uff0c\u8bbe\u7f6eip\u4f2a\u88c5\u3002\u5f53\u5bbf\u4e3b\u673a\u5145\u5f53\u7684\u7f51\u5173\u65e0\u6cd5\u8def\u7531\u5230\u5206\u914d\u7ed9\u5bb9\u5668\u7684IP\u5b50\u7f51\u7684\u7f51\u5173\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u53c2\u6570\u662f\u5fc5\u987b\u6709\u7684\u3002(\u522b\u7684\u5730\u65b9\u6284\u8fc7\u6765\u7684) ipam: ip address management \u4e0d\u540c cni plugin \u5e94\u8be5\u6709\u4e0d\u540c\u7684 key value type: \u4f7f\u7528\u5728\u5f53\u524d\u78c1\u76d8\u4e0a\u7684\u90a3\u4e00\u4e2a cni plugin subnet: \u7ed9 container \u7684 subnet address gateway: gateway \u5730\u5740 routes: \u5728\u521b\u5efa\u51fa\u6765\u7684 network namespace \u4e2d\u8bbe\u7f6e\u7684 route table # \u6240\u6709\u7684\u53c2\u6570\u89e3\u91ca\uff1ahttps://github.com/containernetworking/cni/blob/main/SPEC.md#parameters CNI_COMMAND=ADD CNI_CONTAINERID=lab-ns CNI_NETNS=/var/run/netns/lab-ns CNI_IFNAME=eth0 CNI_PATH=`pwd` ./bridge <./lab-br0.conf # \u8fd9\u4e2a\u547d\u4ee4\u4f1a\u8f93\u51fa\uff1a # { # \"cniVersion\": \"1.0.0\", # \"interfaces\": [ # { # \"name\": \"lab-br0\", # \"mac\": \"c6:5e:52:2b:67:8d\" # }, # { # \"name\": \"veth7e65c23d\", # \"mac\": \"d6:03:a5:19:9e:2b\" # }, # { # \"name\": \"eth0\", # \"mac\": \"06:04:03:ac:ac:9c\", # \"sandbox\": \"/var/run/netns/lab-ns\" # } # ], # \"ips\": [ # { # \"interface\": 2, # \"address\": \"10.1.0.2/16\", # \"gateway\": \"10.1.0.1\" # } # ], # \"routes\": [ # { # \"dst\": \"0.0.0.0/0\" # } # ], # \"dns\": {}","title":"Go Go"},{"location":"kubernetes/cni/0-%E8%AE%A4%E8%AF%86%20cni/#verify","text":"\u9a8c\u8bc1 vm interface ip a s \u00b7\u00b7\u00b7 # \u8fd9\u91cc lab-br0 \u5c31\u662f\u521a\u521a bridge cni \u521b\u5efa\u7684\u7f51\u6865 # veth7e65c23d \u662f veth \u5176\u4e2d\u4e00\u8fb9 8: lab-br0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default qlen 1000 link/ether c6:5e:52:2b:67:8d brd ff:ff:ff:ff:ff:ff inet6 fe80::c45e:52ff:fe2b:678d/64 scope link valid_lft forever preferred_lft forever 9: veth7e65c23d@if2: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue master lab-br0 state UP group default link/ether d6:03:a5:19:9e:2b brd ff:ff:ff:ff:ff:ff link-netns lab-ns inet6 fe80::d403:a5ff:fe19:9e2b/64 scope link valid_lft forever preferred_lft forever # \u53e6\u4e00\u8fb9\u5728 network namespace \u91cc ip netns exec lab-ns ip a s # \u5728 lab-ns \u8fd9\u4e2a network namespace \u4e2d\u53ea\u6709\u4e00\u5757\u7f51\u5361\uff0c\u7f51\u5361\u540d\u5b57\u662f\u4ece\uff1aCNI_IFNAME \u6765\u7684 1: lo: <LOOPBACK> mtu 65536 qdisc noop state DOWN group default qlen 1000 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 2: eth0@if9: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default link/ether 06:04:03:ac:ac:9c brd ff:ff:ff:ff:ff:ff link-netnsid 0 inet 10.1.0.2/16 brd 10.1.255.255 scope global eth0 valid_lft forever preferred_lft forever inet6 fe80::404:3ff:feac:ac9c/64 scope link valid_lft forever preferred_lft forever # \u5728 network namespace \u4e2d\u9a8c\u8bc1\u53ef\u4ee5\u8bbf\u95ee network gateway ip netns exec lab-ns ping 10.1.0.1 -c 3 # \u5728 network namespace \u4e2d\u9a8c\u8bc1\u53ef\u4ee5\u8bbf\u95ee\u81ea\u5df1 ip netns exec lab-ns ping 10.1.0.2 -c 3","title":"verify"},{"location":"kubernetes/cni/0-%E8%AE%A4%E8%AF%86%20cni/#teardown","text":"export NS_NAME=\"lab-ns\" export BR_NAME=\"lab-br0\" # \u5220\u9664\u6d4b\u8bd5\u521b\u5efa\u7684 network namespace ip -all netns delete lab-ns # \u5220\u9664 host-local \u521b\u5efa\u7684 network bridge # \u5728\u5220\u9664 bridge \u524d\uff0c\u5fc5\u987b\u5148\u628a bridge \u505c\u6389 ip link set lab-br0 down brctl delbr lab-br0 # \u5220\u9664 cni \u7528\u6765\u5b58\u50a8 metadata \u7684\u6570\u636e rm -rf /var/lib/cni/networks/lab-br0/","title":"teardown"},{"location":"kubernetes/cni/network/0-netns%20%E4%BA%92%E8%BF%9E/","text":"network namespace \u4e92\u8fde \u5728 linux \u4e2d\u7684\u5bb9\u5668\u5316\u4e0a\uff0c\u4e00\u5b9a\u4f1a\u4f7f\u7528\u5230 linux network namespace \u7528\u6765\u505a\u5bb9\u5668\u4e4b\u95f4\u7684\u7f51\u7edc\u9694\u79bb\u3002\u90a3\u4e48\u5728 linux \u4e2d\u600e\u4e48\u5b9e\u73b0\u4e00\u4e2a\u8ba9 network namespace \u4e92\u8054\u5462\uff1f\u8fd9\u5c31\u662f\u8fd9\u4e2a\u5c0f blog \u7684\u4e3b\u8981\u8bdd\u9898\u3002\u4e5f\u662f\u6700\u8fd1\u5728\u5b66\u4e60 kubernetes CNI \u5f15\u51fa\u7684\u4e00\u4e2a\u5c0f\u8bdd\u9898\u3002 \u4e24\u4e2a network namespace \u4e92\u8fde \u8fd9\u4e2a\u5c0f\u5b9e\u9a8c\u4f7f\u7528 veth pair \u76f4\u63a5\u8ba9\u4e24\u4e2a network namespace \u4e92\u8054\uff0c\u7c7b\u4f3c\u4e8e\u76f4\u63a5\u4f7f\u7528\u4e00\u6839\u7f51\u7ebf\u628a\u4e24\u53f0\u7535\u8111 \ud83d\udcbb \u76f4\u63a5\u8fde\u63a5\uff0c\u8fd9\u6837\u8fd9\u4e24\u4e2a\u7535\u8111\u5c31\u53ef\u4ee5\u4e92\u76f8\u901a\u4fe1\u3002 \u8fd9\u91cc\u4f7f\u7528 ICMP(ping) \u6765\u9a8c\u8bc1\u8fde\u901a\u6027\u3002 ## \u521b\u5efa\u4e24\u4e2a\u7f51\u7edc\u547d\u540d\u7a7a\u95f4 ip netns add ns1 ip netns add ns2 ## \u521b\u5efa\u4e00\u5bf9\u865a\u62df\u4ee5\u592a\u7f51\u8bbe\u5907\uff0c\u5e76\u5c06\u6bcf\u4e2a\u8bbe\u5907\u8fde\u63a5\u5230\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4 ip link add veth1 type veth peer name veth2 ip link set veth1 netns ns1 ip link set veth2 netns ns2 ## \u5728\u6bcf\u4e2a\u547d\u540d\u7a7a\u95f4\u4e2d\u914d\u7f6e\u7f51\u7edc\u63a5\u53e3 ip netns exec ns1 ip addr add 192.168.1.1/24 dev veth1 ip netns exec ns1 ip link set veth1 up ip netns exec ns2 ip addr add 192.168.1.2/24 dev veth2 ip netns exec ns2 ip link set veth2 up ## \u5728\u6bcf\u4e2a\u7f51\u7edc\u547d\u540d\u7a7a\u95f4\u4e2d\u914d\u7f6e\u9ed8\u8ba4\u8def\u7531 ip netns exec ns1 ip route add default via 192.168.1.2 ip netns exec ns2 ip route add default via 192.168.1.1 ## --------------------------------------- ## teardown ip netns del ns1 ip netns del ns2 \u4e24\u4e2a network \u901a\u8fc7 veth \u8fde\u63a5\u5230\u540c\u4e00\u4e2a network bridge \u4e0a \u5728 linux \u4e2d\u6709\u4e00\u4e2a\u53eb\u505a network bridge \u7684\u7f51\u7edc\u7ec4\u4ef6\uff0c\u7ed1\u5b9a\u5728\u540c\u4e00\u4e2a bridge \u4e0a\u7684 veth \u53ef\u4ee5\u4e92\u76f8\u8bbf\u95ee\u3002 ## \u5b89\u88c5 brictl, iptables apt install iproute2 bridge-utils iptables -y ## \u521b\u5efa\u4e24\u4e2a\u7f51\u7edc\u547d\u540d\u7a7a\u95f4 ip netns add ns1 ip netns add ns2 ## \u521b\u5efa\u4e00\u4e2a\u7f51\u6865 brctl addbr br0 ## \u4e3a\u7f51\u6865\u6dfb\u52a0 IP \u5730\u5740\uff0c\u5e76\u542f\u7528 ip addr add 192.168.1.254/24 dev br0 ip link set dev br0 up ## \u5c06\u865a\u62df\u8bbe\u5907 veth1 \u548c veth2 \u5206\u522b\u6dfb\u52a0\u5230\u4e24\u4e2a\u7f51\u7edc\u547d\u540d\u7a7a\u95f4\u4e2d ip link add veth1 type veth peer name veth1-br ip link set veth1-br up ip link add veth2 type veth peer name veth2-br ip link set veth2-br up ## \u5c06\u865a\u62df\u8bbe\u5907 veth1-br \u548c veth2-br \u5206\u522b\u6dfb\u52a0\u5230\u7f51\u6865 br0 \u4e2d brctl addif br0 veth1-br brctl addif br0 veth2-br ## \u5728\u6bcf\u4e2a\u547d\u540d\u7a7a\u95f4\u4e2d\u914d\u7f6e\u7f51\u7edc\u63a5\u53e3 ip link set veth1 netns ns1 ip netns exec ns1 ip addr add 192.168.1.1/24 dev veth1 ip netns exec ns1 ip link set veth1 up ip link set veth2 netns ns2 ip netns exec ns2 ip addr add 192.168.1.2/24 dev veth2 ip netns exec ns2 ip link set veth2 up ## \u7531\u4e8e iptables \u4f1a\u7981\u6b62\u8bbf\u95ee\uff0c\u9700\u8981\u5f00\u542f(\u6682\u65f6\u4e0d\u77e5\u9053\u4e3a\u5565) iptables -A FORWARD -i br0 -j ACCEPT ## \u8bbe\u7f6e\u9ed8\u8ba4\u8def\u7531\uff0c\u8ba9\u7f51\u6865\u4f5c\u4e3a\u7f51\u5173 ip netns exec ns1 ip route add default via 192.168.1.254 ip netns exec ns2 ip route add default via 192.168.1.254 ## ------------------------- ## teardown iptables -D FORWARD -i br0 -j ACCEPT ip netns del ns1 ip netns del ns2 ip link del br0 Note tcpdump: \u7528\u6765\u6293\u5bf9\u5e94 network interface \u7684\u8bf7\u6c42\uff0c\u5e38\u7528\u7684 options -p: Don't put the interface into promiscuous mode.(\u6682\u65f6\u4e0d\u77e5\u9053\u4ec0\u4e48\u662f\u6df7\u6742\u6a21\u5f0f promiscuous mode) -n: Don't convert addresses (i.e., host addresses, port numbers, etc.) to names. -e: Print the link-level header on each dump line. This can be used, for example, to print MAC layer addresses for protocols such as Ethernet and IEEE 802.11.","title":"network namespace \u4e92\u8fde"},{"location":"kubernetes/cni/network/0-netns%20%E4%BA%92%E8%BF%9E/#network-namespace","text":"\u5728 linux \u4e2d\u7684\u5bb9\u5668\u5316\u4e0a\uff0c\u4e00\u5b9a\u4f1a\u4f7f\u7528\u5230 linux network namespace \u7528\u6765\u505a\u5bb9\u5668\u4e4b\u95f4\u7684\u7f51\u7edc\u9694\u79bb\u3002\u90a3\u4e48\u5728 linux \u4e2d\u600e\u4e48\u5b9e\u73b0\u4e00\u4e2a\u8ba9 network namespace \u4e92\u8054\u5462\uff1f\u8fd9\u5c31\u662f\u8fd9\u4e2a\u5c0f blog \u7684\u4e3b\u8981\u8bdd\u9898\u3002\u4e5f\u662f\u6700\u8fd1\u5728\u5b66\u4e60 kubernetes CNI \u5f15\u51fa\u7684\u4e00\u4e2a\u5c0f\u8bdd\u9898\u3002","title":"network namespace \u4e92\u8fde"},{"location":"kubernetes/cni/network/0-netns%20%E4%BA%92%E8%BF%9E/#network-namespace_1","text":"\u8fd9\u4e2a\u5c0f\u5b9e\u9a8c\u4f7f\u7528 veth pair \u76f4\u63a5\u8ba9\u4e24\u4e2a network namespace \u4e92\u8054\uff0c\u7c7b\u4f3c\u4e8e\u76f4\u63a5\u4f7f\u7528\u4e00\u6839\u7f51\u7ebf\u628a\u4e24\u53f0\u7535\u8111 \ud83d\udcbb \u76f4\u63a5\u8fde\u63a5\uff0c\u8fd9\u6837\u8fd9\u4e24\u4e2a\u7535\u8111\u5c31\u53ef\u4ee5\u4e92\u76f8\u901a\u4fe1\u3002 \u8fd9\u91cc\u4f7f\u7528 ICMP(ping) \u6765\u9a8c\u8bc1\u8fde\u901a\u6027\u3002 ## \u521b\u5efa\u4e24\u4e2a\u7f51\u7edc\u547d\u540d\u7a7a\u95f4 ip netns add ns1 ip netns add ns2 ## \u521b\u5efa\u4e00\u5bf9\u865a\u62df\u4ee5\u592a\u7f51\u8bbe\u5907\uff0c\u5e76\u5c06\u6bcf\u4e2a\u8bbe\u5907\u8fde\u63a5\u5230\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4 ip link add veth1 type veth peer name veth2 ip link set veth1 netns ns1 ip link set veth2 netns ns2 ## \u5728\u6bcf\u4e2a\u547d\u540d\u7a7a\u95f4\u4e2d\u914d\u7f6e\u7f51\u7edc\u63a5\u53e3 ip netns exec ns1 ip addr add 192.168.1.1/24 dev veth1 ip netns exec ns1 ip link set veth1 up ip netns exec ns2 ip addr add 192.168.1.2/24 dev veth2 ip netns exec ns2 ip link set veth2 up ## \u5728\u6bcf\u4e2a\u7f51\u7edc\u547d\u540d\u7a7a\u95f4\u4e2d\u914d\u7f6e\u9ed8\u8ba4\u8def\u7531 ip netns exec ns1 ip route add default via 192.168.1.2 ip netns exec ns2 ip route add default via 192.168.1.1 ## --------------------------------------- ## teardown ip netns del ns1 ip netns del ns2","title":"\u4e24\u4e2a network namespace \u4e92\u8fde"},{"location":"kubernetes/cni/network/0-netns%20%E4%BA%92%E8%BF%9E/#network-veth-network-bridge","text":"\u5728 linux \u4e2d\u6709\u4e00\u4e2a\u53eb\u505a network bridge \u7684\u7f51\u7edc\u7ec4\u4ef6\uff0c\u7ed1\u5b9a\u5728\u540c\u4e00\u4e2a bridge \u4e0a\u7684 veth \u53ef\u4ee5\u4e92\u76f8\u8bbf\u95ee\u3002 ## \u5b89\u88c5 brictl, iptables apt install iproute2 bridge-utils iptables -y ## \u521b\u5efa\u4e24\u4e2a\u7f51\u7edc\u547d\u540d\u7a7a\u95f4 ip netns add ns1 ip netns add ns2 ## \u521b\u5efa\u4e00\u4e2a\u7f51\u6865 brctl addbr br0 ## \u4e3a\u7f51\u6865\u6dfb\u52a0 IP \u5730\u5740\uff0c\u5e76\u542f\u7528 ip addr add 192.168.1.254/24 dev br0 ip link set dev br0 up ## \u5c06\u865a\u62df\u8bbe\u5907 veth1 \u548c veth2 \u5206\u522b\u6dfb\u52a0\u5230\u4e24\u4e2a\u7f51\u7edc\u547d\u540d\u7a7a\u95f4\u4e2d ip link add veth1 type veth peer name veth1-br ip link set veth1-br up ip link add veth2 type veth peer name veth2-br ip link set veth2-br up ## \u5c06\u865a\u62df\u8bbe\u5907 veth1-br \u548c veth2-br \u5206\u522b\u6dfb\u52a0\u5230\u7f51\u6865 br0 \u4e2d brctl addif br0 veth1-br brctl addif br0 veth2-br ## \u5728\u6bcf\u4e2a\u547d\u540d\u7a7a\u95f4\u4e2d\u914d\u7f6e\u7f51\u7edc\u63a5\u53e3 ip link set veth1 netns ns1 ip netns exec ns1 ip addr add 192.168.1.1/24 dev veth1 ip netns exec ns1 ip link set veth1 up ip link set veth2 netns ns2 ip netns exec ns2 ip addr add 192.168.1.2/24 dev veth2 ip netns exec ns2 ip link set veth2 up ## \u7531\u4e8e iptables \u4f1a\u7981\u6b62\u8bbf\u95ee\uff0c\u9700\u8981\u5f00\u542f(\u6682\u65f6\u4e0d\u77e5\u9053\u4e3a\u5565) iptables -A FORWARD -i br0 -j ACCEPT ## \u8bbe\u7f6e\u9ed8\u8ba4\u8def\u7531\uff0c\u8ba9\u7f51\u6865\u4f5c\u4e3a\u7f51\u5173 ip netns exec ns1 ip route add default via 192.168.1.254 ip netns exec ns2 ip route add default via 192.168.1.254 ## ------------------------- ## teardown iptables -D FORWARD -i br0 -j ACCEPT ip netns del ns1 ip netns del ns2 ip link del br0","title":"\u4e24\u4e2a network \u901a\u8fc7 veth \u8fde\u63a5\u5230\u540c\u4e00\u4e2a network bridge \u4e0a"},{"location":"kubernetes/cni/network/0-netns%20%E4%BA%92%E8%BF%9E/#note","text":"tcpdump: \u7528\u6765\u6293\u5bf9\u5e94 network interface \u7684\u8bf7\u6c42\uff0c\u5e38\u7528\u7684 options -p: Don't put the interface into promiscuous mode.(\u6682\u65f6\u4e0d\u77e5\u9053\u4ec0\u4e48\u662f\u6df7\u6742\u6a21\u5f0f promiscuous mode) -n: Don't convert addresses (i.e., host addresses, port numbers, etc.) to names. -e: Print the link-level header on each dump line. This can be used, for example, to print MAC layer addresses for protocols such as Ethernet and IEEE 802.11.","title":"Note"},{"location":"kubernetes/hpa/0-hpa-%E8%AF%86%E5%88%AB-external-metric/","text":"HPA \u8bc6\u522b external metric \u4f7f\u7528 kubernetes \u7684\u8fd0\u7ef4\uff0c\u4e00\u5b9a\u90fd\u4f1a\u9047\u5230\u9700\u8981\u914d\u7f6e hpa(Horizontal Pod Autoscaling) \u7684\u65f6\u5019\uff0c\u6bd5\u7adf\u73b0\u5728\u4f7f\u7528 kubernetes \u5176\u4e2d\u4e00\u65b9\u9762\u5f88\u5927\u7a0b\u5ea6\u90fd\u662f\u4e3a\u4e86\u5728\u4e1a\u52a1\u4f4e\u8c37\u671f\u901a\u8fc7 auto-scaling \u7701\u94b1\u3002 \u4f46\u662f kubernetes \u5185\u7f6e\u7684 metric \u53ea\u80fd\u652f\u6301\u4f7f\u7528 CPU + memory\uff0c\u53ea\u6709\u8fd9\u4e24\u4e2a metric \u80af\u5b9a\u4e0d\u8db3\u4ee5\u6ee1\u8db3\u73b0\u5728\u8fd9\u4e2a\u65f6\u4ee3\u8fd9\u4e48\u590d\u6742\u7684\u9700\u6c42\uff0c\u4e8e\u662f external metric \u51fa\u73b0\u4e86\u3002 HPA \u5982\u4f55\u4f7f\u7528 external metric \u8fd9\u91cc\u4ee5 KEDA \u4e3e\u4f8b\u5b50(\u4e00\u4e2a\u53ef\u4ee5\u652f\u6301 scale to zero \u7684\u5de5\u5177)\u3002 \u6309\u7167 KEDA \u5b98\u65b9\u6587\u6863\u4f7f\u7528 helm \u5b89\u88c5 \u5b8c\u6bd5\u4ee5\u540e\uff0c\u53ef\u4ee5\u5728\u547d\u4ee4\u884c\u6572\u4e00\u4e2a\uff1a $ kubectl get apiservices | grep keda v1beta1.external.metrics.k8s.io keda/keda-operator-metrics-apiserver True 145d \u8fd9\u91cc\u7684 v1beta1.external.metrics.k8s.io \u5c31\u662f kubernetes hpa \u4f1a\u901a\u8fc7\u8fd9\u4e2a api \u6765\u83b7\u53d6 external metric\u3002\u6309\u7167\u5b98\u7f51\u5b9a\u4e49\u7684\uff0chpa \u9ed8\u8ba4\u6bcf 15s \u4f1a\u4ece kube-controller-manager \u83b7\u53d6 metric\u3002 \u8fd9\u4e2a apiservice \u5bf9\u8c61 yaml \u4e3a\uff1a apiVersion: apiregistration.k8s.io/v1 kind: APIService metadata: annotations: meta.helm.sh/release-name: keda meta.helm.sh/release-namespace: keda labels: app.kubernetes.io/component: operator app.kubernetes.io/instance: keda app.kubernetes.io/managed-by: Helm app.kubernetes.io/name: v1beta1.external.metrics.k8s.io app.kubernetes.io/part-of: keda-operator app.kubernetes.io/version: 2.16.1 helm.sh/chart: keda-2.16.1 name: v1beta1.external.metrics.k8s.io spec: caBundle: .... group: external.metrics.k8s.io groupPriorityMinimum: 100 service: name: keda-operator-metrics-apiserver namespace: keda port: 443 version: v1beta1 versionPriority: 100 \u53ef\u4ee5\u770b\u5230\u8fd9\u91cc\u7684 apiservice \u6700\u540e\u4f1a\u8def\u7531\u5230\u4e00\u4e2a KEDA \u7684 svc \u4e0a\uff0c\u8fd9\u4e2a svc \u6700\u540e\u624d\u662f\u5b9e\u9645\u4e0a\u7528\u6765\u63d0\u4f9b external metric \u7684\u5730\u65b9\uff0c\u8fd9\u4e00\u5957\u6d41\u7a0b Prometheus\u3001Datadog \u4e5f\u90fd\u662f\u4e00\u6837\uff0c \u4e14\u8fd9\u4e9b\u4f7f\u7528 external metric \u7684\u5de5\u5177\uff0c\u6700\u540e\u5fc5\u987b\u521b\u5efa\u4e00\u4e2a name \u4e3a\uff1a v1beta1.external.metrics.k8s.io \u7684 api service\uff0c\u8fd9\u5c31\u5bfc\u81f4\u5982\u679c\u60f3\u8981\u5207\u6362 external metric \u53ea\u80fd\u5148\u5378\u8f7d\u518d\u91cd\u88c5 \ud83e\udee0","title":"HPA \u8bc6\u522b external metric"},{"location":"kubernetes/hpa/0-hpa-%E8%AF%86%E5%88%AB-external-metric/#hpa-external-metric","text":"\u4f7f\u7528 kubernetes \u7684\u8fd0\u7ef4\uff0c\u4e00\u5b9a\u90fd\u4f1a\u9047\u5230\u9700\u8981\u914d\u7f6e hpa(Horizontal Pod Autoscaling) \u7684\u65f6\u5019\uff0c\u6bd5\u7adf\u73b0\u5728\u4f7f\u7528 kubernetes \u5176\u4e2d\u4e00\u65b9\u9762\u5f88\u5927\u7a0b\u5ea6\u90fd\u662f\u4e3a\u4e86\u5728\u4e1a\u52a1\u4f4e\u8c37\u671f\u901a\u8fc7 auto-scaling \u7701\u94b1\u3002 \u4f46\u662f kubernetes \u5185\u7f6e\u7684 metric \u53ea\u80fd\u652f\u6301\u4f7f\u7528 CPU + memory\uff0c\u53ea\u6709\u8fd9\u4e24\u4e2a metric \u80af\u5b9a\u4e0d\u8db3\u4ee5\u6ee1\u8db3\u73b0\u5728\u8fd9\u4e2a\u65f6\u4ee3\u8fd9\u4e48\u590d\u6742\u7684\u9700\u6c42\uff0c\u4e8e\u662f external metric \u51fa\u73b0\u4e86\u3002","title":"HPA \u8bc6\u522b external metric"},{"location":"kubernetes/hpa/0-hpa-%E8%AF%86%E5%88%AB-external-metric/#hpa-external-metric_1","text":"\u8fd9\u91cc\u4ee5 KEDA \u4e3e\u4f8b\u5b50(\u4e00\u4e2a\u53ef\u4ee5\u652f\u6301 scale to zero \u7684\u5de5\u5177)\u3002 \u6309\u7167 KEDA \u5b98\u65b9\u6587\u6863\u4f7f\u7528 helm \u5b89\u88c5 \u5b8c\u6bd5\u4ee5\u540e\uff0c\u53ef\u4ee5\u5728\u547d\u4ee4\u884c\u6572\u4e00\u4e2a\uff1a $ kubectl get apiservices | grep keda v1beta1.external.metrics.k8s.io keda/keda-operator-metrics-apiserver True 145d \u8fd9\u91cc\u7684 v1beta1.external.metrics.k8s.io \u5c31\u662f kubernetes hpa \u4f1a\u901a\u8fc7\u8fd9\u4e2a api \u6765\u83b7\u53d6 external metric\u3002\u6309\u7167\u5b98\u7f51\u5b9a\u4e49\u7684\uff0chpa \u9ed8\u8ba4\u6bcf 15s \u4f1a\u4ece kube-controller-manager \u83b7\u53d6 metric\u3002 \u8fd9\u4e2a apiservice \u5bf9\u8c61 yaml \u4e3a\uff1a apiVersion: apiregistration.k8s.io/v1 kind: APIService metadata: annotations: meta.helm.sh/release-name: keda meta.helm.sh/release-namespace: keda labels: app.kubernetes.io/component: operator app.kubernetes.io/instance: keda app.kubernetes.io/managed-by: Helm app.kubernetes.io/name: v1beta1.external.metrics.k8s.io app.kubernetes.io/part-of: keda-operator app.kubernetes.io/version: 2.16.1 helm.sh/chart: keda-2.16.1 name: v1beta1.external.metrics.k8s.io spec: caBundle: .... group: external.metrics.k8s.io groupPriorityMinimum: 100 service: name: keda-operator-metrics-apiserver namespace: keda port: 443 version: v1beta1 versionPriority: 100 \u53ef\u4ee5\u770b\u5230\u8fd9\u91cc\u7684 apiservice \u6700\u540e\u4f1a\u8def\u7531\u5230\u4e00\u4e2a KEDA \u7684 svc \u4e0a\uff0c\u8fd9\u4e2a svc \u6700\u540e\u624d\u662f\u5b9e\u9645\u4e0a\u7528\u6765\u63d0\u4f9b external metric \u7684\u5730\u65b9\uff0c\u8fd9\u4e00\u5957\u6d41\u7a0b Prometheus\u3001Datadog \u4e5f\u90fd\u662f\u4e00\u6837\uff0c \u4e14\u8fd9\u4e9b\u4f7f\u7528 external metric \u7684\u5de5\u5177\uff0c\u6700\u540e\u5fc5\u987b\u521b\u5efa\u4e00\u4e2a name \u4e3a\uff1a v1beta1.external.metrics.k8s.io \u7684 api service\uff0c\u8fd9\u5c31\u5bfc\u81f4\u5982\u679c\u60f3\u8981\u5207\u6362 external metric \u53ea\u80fd\u5148\u5378\u8f7d\u518d\u91cd\u88c5 \ud83e\udee0","title":"HPA \u5982\u4f55\u4f7f\u7528 external metric"},{"location":"kubernetes/loadbalancer/0-local-LoadBalancer-metallb/","text":"Local LoadBalancer metallb \u6700\u8fd1\u5728\u8c03\u7814\u4e00\u4e9b Helm Chart \u7684\u65f6\u5019\uff0c\u603b\u4f1a\u51fa\u73b0\u4ed6\u4eec\u9ed8\u8ba4\u63d0\u4f9b\u7684 values \u91cc\u5bf9\u4e8e SVC \u7684 Type \u90fd\u662f LoadBalancer\uff0c\u4f46\u662f\u6211\u7684\u672c\u5730 Kubernetes \u6839\u672c\u4e0d\u652f\u6301\u5b89\u88c5 LoadBalancer \u7c7b\u578b\u7684 SVC\uff0c\u6bcf\u6b21\u90fd\u5f97\u624b\u52a8\u4fee\u6539 SVC \u90e8\u5206\u914d\u7f6e\u4f7f\u7528 NodePort \u4ee5\u4fbf\u4e8e\u6211\u53ef\u4ee5\u5728\u96c6\u7fa4\u5916\u90e8\u8bbf\u95ee\u5230\u670d\u52a1\u3002 How \u6700\u8fd1\u6b63\u597d\u5728\u4f7f\u7528\u4e00\u4e2a\u65b0\u7684 Local LoadBalancer provider: metallb . \u8fd9\u4e2a\u5e93\u633a\u597d\u7528\u7684\uff0c\u76f4\u63a5\u5c31\u80fd\u4f7f\u7528\u672c\u5730\u80fd\u591f\u8bbf\u95ee\u5230\u7684 ip \u4f5c\u4e3a LoadBalancer \u7684 External IP\uff0c\u4e0d\u8fc7\u6587\u6863\u5199\u7684\u662f\u771f\u4e0d\u548b\u5730\uff0c\u4e5f\u6ca1\u6709\u4e00\u4e2a Getting Start\uff0c\u90a3\u6211\u5c31\u52c9\u52c9\u5f3a\u5f3a\u7ed9\u5199\u4e00\u4e2a\u5427 \ud83e\udee0 MetalLB Getting Start Install Orbstack: brew install orbstack Start Kubernetes via Orbstack: orb start k8s Install MetalLB helm repo add metallb https://metallb.github.io/metallb # frr: \u5f00\u542f BGP \u8fd9\u5bf9\u4e8e\u6211\u672c\u5730\u6d4b\u8bd5\u6765\u8bf4\uff0c\u6ca1\u6709\u4efb\u4f55\u4f5c\u7528 helm upgrade --install metallb metallb/metallb --version 0.15.2 --set \"speaker.frr.enabled=false\" -n metallb --create-namespace Detect Node IP: kubectl get node -o wide | awk 'NR!=1{print $6}' \u4e3a\u4e86\u77e5\u9053\u672c\u673a\u53ef\u4ee5\u8fde\u63a5\u5230 Orbstack \u542f\u52a8\u7684 Kubernetes IP \u6bb5\u5f97\u5148\u83b7\u53d6\u4e00\u4e0b node ip\uff0c\u5047\u5982 node ip \u662f: 198.19.249.2 \uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u7ed9 Metallb \u914d\u7f6e\u7684 ip \u6bb5\u4e3a: 198.19.249.100-198.19.249.200 \u3002 \u5207\u8bb0\uff1a \u4e0d\u8981\u4f7f\u7528 en0 \u5bf9\u5e94\u7684 ip \u6bb5\uff0c\u53ef\u80fd\u4f1a\u5bf9\u5c40\u57df\u7f51\u4ea7\u751f\u5f71\u54cd\u3002 Configure Metallb kubectl apply -n metallb -f - <<EOF apiVersion: metallb.io/v1beta1 kind: IPAddressPool metadata: name: default-pool spec: addresses: - 198.19.249.100-198.19.249.200 --- apiVersion: metallb.io/v1beta1 kind: L2Advertisement metadata: name: l2adv spec: ipAddressPools: - default-pool EOF Test kubectl apply -f - <<EOF apiVersion: apps/v1 kind: Deployment metadata: name: nginx spec: selector: matchLabels: app: nginx template: metadata: labels: app: nginx spec: containers: - name: nginx image: nginx:mainline-alpine3.22 ports: - name: http containerPort: 80 --- apiVersion: v1 kind: Service metadata: name: nginx spec: ports: - name: http port: 80 protocol: TCP targetPort: 80 selector: app: nginx type: LoadBalancer EOF \u7b49\u5f85\u4e00\u4f1a\uff0c\u67e5\u770b Service \u662f\u5426\u83b7\u53d6\u5230\u4e86 External IP\uff1a kubectl get svc nginx","title":"Local LoadBalancer metallb"},{"location":"kubernetes/loadbalancer/0-local-LoadBalancer-metallb/#local-loadbalancer-metallb","text":"\u6700\u8fd1\u5728\u8c03\u7814\u4e00\u4e9b Helm Chart \u7684\u65f6\u5019\uff0c\u603b\u4f1a\u51fa\u73b0\u4ed6\u4eec\u9ed8\u8ba4\u63d0\u4f9b\u7684 values \u91cc\u5bf9\u4e8e SVC \u7684 Type \u90fd\u662f LoadBalancer\uff0c\u4f46\u662f\u6211\u7684\u672c\u5730 Kubernetes \u6839\u672c\u4e0d\u652f\u6301\u5b89\u88c5 LoadBalancer \u7c7b\u578b\u7684 SVC\uff0c\u6bcf\u6b21\u90fd\u5f97\u624b\u52a8\u4fee\u6539 SVC \u90e8\u5206\u914d\u7f6e\u4f7f\u7528 NodePort \u4ee5\u4fbf\u4e8e\u6211\u53ef\u4ee5\u5728\u96c6\u7fa4\u5916\u90e8\u8bbf\u95ee\u5230\u670d\u52a1\u3002","title":"Local LoadBalancer metallb"},{"location":"kubernetes/loadbalancer/0-local-LoadBalancer-metallb/#how","text":"\u6700\u8fd1\u6b63\u597d\u5728\u4f7f\u7528\u4e00\u4e2a\u65b0\u7684 Local LoadBalancer provider: metallb . \u8fd9\u4e2a\u5e93\u633a\u597d\u7528\u7684\uff0c\u76f4\u63a5\u5c31\u80fd\u4f7f\u7528\u672c\u5730\u80fd\u591f\u8bbf\u95ee\u5230\u7684 ip \u4f5c\u4e3a LoadBalancer \u7684 External IP\uff0c\u4e0d\u8fc7\u6587\u6863\u5199\u7684\u662f\u771f\u4e0d\u548b\u5730\uff0c\u4e5f\u6ca1\u6709\u4e00\u4e2a Getting Start\uff0c\u90a3\u6211\u5c31\u52c9\u52c9\u5f3a\u5f3a\u7ed9\u5199\u4e00\u4e2a\u5427 \ud83e\udee0","title":"How"},{"location":"kubernetes/loadbalancer/0-local-LoadBalancer-metallb/#metallb-getting-start","text":"Install Orbstack: brew install orbstack Start Kubernetes via Orbstack: orb start k8s Install MetalLB helm repo add metallb https://metallb.github.io/metallb # frr: \u5f00\u542f BGP \u8fd9\u5bf9\u4e8e\u6211\u672c\u5730\u6d4b\u8bd5\u6765\u8bf4\uff0c\u6ca1\u6709\u4efb\u4f55\u4f5c\u7528 helm upgrade --install metallb metallb/metallb --version 0.15.2 --set \"speaker.frr.enabled=false\" -n metallb --create-namespace Detect Node IP: kubectl get node -o wide | awk 'NR!=1{print $6}' \u4e3a\u4e86\u77e5\u9053\u672c\u673a\u53ef\u4ee5\u8fde\u63a5\u5230 Orbstack \u542f\u52a8\u7684 Kubernetes IP \u6bb5\u5f97\u5148\u83b7\u53d6\u4e00\u4e0b node ip\uff0c\u5047\u5982 node ip \u662f: 198.19.249.2 \uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u7ed9 Metallb \u914d\u7f6e\u7684 ip \u6bb5\u4e3a: 198.19.249.100-198.19.249.200 \u3002 \u5207\u8bb0\uff1a \u4e0d\u8981\u4f7f\u7528 en0 \u5bf9\u5e94\u7684 ip \u6bb5\uff0c\u53ef\u80fd\u4f1a\u5bf9\u5c40\u57df\u7f51\u4ea7\u751f\u5f71\u54cd\u3002 Configure Metallb kubectl apply -n metallb -f - <<EOF apiVersion: metallb.io/v1beta1 kind: IPAddressPool metadata: name: default-pool spec: addresses: - 198.19.249.100-198.19.249.200 --- apiVersion: metallb.io/v1beta1 kind: L2Advertisement metadata: name: l2adv spec: ipAddressPools: - default-pool EOF Test kubectl apply -f - <<EOF apiVersion: apps/v1 kind: Deployment metadata: name: nginx spec: selector: matchLabels: app: nginx template: metadata: labels: app: nginx spec: containers: - name: nginx image: nginx:mainline-alpine3.22 ports: - name: http containerPort: 80 --- apiVersion: v1 kind: Service metadata: name: nginx spec: ports: - name: http port: 80 protocol: TCP targetPort: 80 selector: app: nginx type: LoadBalancer EOF \u7b49\u5f85\u4e00\u4f1a\uff0c\u67e5\u770b Service \u662f\u5426\u83b7\u53d6\u5230\u4e86 External IP\uff1a kubectl get svc nginx","title":"MetalLB Getting Start"}]}